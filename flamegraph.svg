<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="25921263211"><g><title>array_hash_map.ArrayHashMapUnmanaged (155,450,165 samples, 0.60%)</title><rect x="0.0000%" y="885" width="0.5997%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="155450165"/><text x="0.2500%" y="895.50"></text></g><g><title>compiler_rt.memcpy.memcpy (8,526,344,785 samples, 32.89%)</title><rect x="0.6049%" y="885" width="32.8932%" height="15" fill="rgb(217,0,24)" fg:x="156792725" fg:w="8526344785"/><text x="0.8549%" y="895.50">compiler_rt.memcpy.memcpy</text></g><g><title>compiler_rt.memset.memset (7,555,891 samples, 0.03%)</title><rect x="33.4981%" y="885" width="0.0291%" height="15" fill="rgb(221,193,54)" fg:x="8683137510" fg:w="7555891"/><text x="33.7481%" y="895.50"></text></g><g><title>debug.assert (4,989,765 samples, 0.02%)</title><rect x="33.5273%" y="885" width="0.0192%" height="15" fill="rgb(248,212,6)" fg:x="8690693401" fg:w="4989765"/><text x="33.7773%" y="895.50"></text></g><g><title>hash_map.getAutoEqlFn__struct_13349.eql (4,105,883 samples, 0.02%)</title><rect x="33.5465%" y="885" width="0.0158%" height="15" fill="rgb(208,68,35)" fg:x="8695683166" fg:w="4105883"/><text x="33.7965%" y="895.50"></text></g><g><title>mem.isValidAlignGeneric__anon_12071 (3,436,595 samples, 0.01%)</title><rect x="33.5805%" y="885" width="0.0133%" height="15" fill="rgb(232,128,0)" fg:x="8704491725" fg:w="3436595"/><text x="33.8305%" y="895.50"></text></g><g><title>[anon] (8,714,213,897 samples, 33.62%)</title><rect x="0.0000%" y="901" width="33.6180%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="8714213897"/><text x="0.2500%" y="911.50">[anon]</text></g><g><title>[unknown] (12,697,874 samples, 0.05%)</title><rect x="33.6710%" y="885" width="0.0490%" height="15" fill="rgb(228,23,34)" fg:x="8727937614" fg:w="12697874"/><text x="33.9210%" y="895.50"></text></g><g><title>[unknown] (12,697,874 samples, 0.05%)</title><rect x="33.6710%" y="869" width="0.0490%" height="15" fill="rgb(218,30,26)" fg:x="8727937614" fg:w="12697874"/><text x="33.9210%" y="879.50"></text></g><g><title>[unknown] (12,697,874 samples, 0.05%)</title><rect x="33.6710%" y="853" width="0.0490%" height="15" fill="rgb(220,122,19)" fg:x="8727937614" fg:w="12697874"/><text x="33.9210%" y="863.50"></text></g><g><title>[unknown] (10,665,110 samples, 0.04%)</title><rect x="33.6788%" y="837" width="0.0411%" height="15" fill="rgb(250,228,42)" fg:x="8729970378" fg:w="10665110"/><text x="33.9288%" y="847.50"></text></g><g><title>[unknown] (6,418,359 samples, 0.02%)</title><rect x="33.6952%" y="821" width="0.0248%" height="15" fill="rgb(240,193,28)" fg:x="8734217129" fg:w="6418359"/><text x="33.9452%" y="831.50"></text></g><g><title>[unknown] (5,075,587 samples, 0.02%)</title><rect x="33.7004%" y="805" width="0.0196%" height="15" fill="rgb(216,20,37)" fg:x="8735559901" fg:w="5075587"/><text x="33.9504%" y="815.50"></text></g><g><title>[unknown] (5,075,587 samples, 0.02%)</title><rect x="33.7004%" y="789" width="0.0196%" height="15" fill="rgb(206,188,39)" fg:x="8735559901" fg:w="5075587"/><text x="33.9504%" y="799.50"></text></g><g><title>[unknown] (5,075,587 samples, 0.02%)</title><rect x="33.7004%" y="773" width="0.0196%" height="15" fill="rgb(217,207,13)" fg:x="8735559901" fg:w="5075587"/><text x="33.9504%" y="783.50"></text></g><g><title>[unknown] (5,046,309 samples, 0.02%)</title><rect x="33.7005%" y="757" width="0.0195%" height="15" fill="rgb(231,73,38)" fg:x="8735589179" fg:w="5046309"/><text x="33.9505%" y="767.50"></text></g><g><title>[unknown] (5,046,309 samples, 0.02%)</title><rect x="33.7005%" y="741" width="0.0195%" height="15" fill="rgb(225,20,46)" fg:x="8735589179" fg:w="5046309"/><text x="33.9505%" y="751.50"></text></g><g><title>[unknown] (5,046,309 samples, 0.02%)</title><rect x="33.7005%" y="725" width="0.0195%" height="15" fill="rgb(210,31,41)" fg:x="8735589179" fg:w="5046309"/><text x="33.9505%" y="735.50"></text></g><g><title>[unknown] (5,046,309 samples, 0.02%)</title><rect x="33.7005%" y="709" width="0.0195%" height="15" fill="rgb(221,200,47)" fg:x="8735589179" fg:w="5046309"/><text x="33.9505%" y="719.50"></text></g><g><title>[unknown] (3,732,467 samples, 0.01%)</title><rect x="33.7055%" y="693" width="0.0144%" height="15" fill="rgb(226,26,5)" fg:x="8736903021" fg:w="3732467"/><text x="33.9555%" y="703.50"></text></g><g><title>[unknown] (3,732,467 samples, 0.01%)</title><rect x="33.7055%" y="677" width="0.0144%" height="15" fill="rgb(249,33,26)" fg:x="8736903021" fg:w="3732467"/><text x="33.9555%" y="687.50"></text></g><g><title>[unknown] (3,732,467 samples, 0.01%)</title><rect x="33.7055%" y="661" width="0.0144%" height="15" fill="rgb(235,183,28)" fg:x="8736903021" fg:w="3732467"/><text x="33.9555%" y="671.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (45,796,746 samples, 0.18%)</title><rect x="33.7199%" y="885" width="0.1767%" height="15" fill="rgb(221,5,38)" fg:x="8740635488" fg:w="45796746"/><text x="33.9699%" y="895.50"></text></g><g><title>array_hash_map.IndexHeader.mask (4,271,322 samples, 0.02%)</title><rect x="33.8966%" y="885" width="0.0165%" height="15" fill="rgb(247,18,42)" fg:x="8786432234" fg:w="4271322"/><text x="34.1466%" y="895.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (2,248,370,438 samples, 8.67%)</title><rect x="33.9209%" y="725" width="8.6738%" height="15" fill="rgb(241,131,45)" fg:x="8792736227" fg:w="2248370438"/><text x="34.1709%" y="735.50">array_hash_m..</text></g><g><title>array_list.ArrayListAligned (4,229,187 samples, 0.02%)</title><rect x="42.5948%" y="725" width="0.0163%" height="15" fill="rgb(249,31,29)" fg:x="11041106665" fg:w="4229187"/><text x="42.8448%" y="735.50"></text></g><g><title>compiler_rt.memcpy.memcpy (1,645,030,354 samples, 6.35%)</title><rect x="42.6111%" y="725" width="6.3463%" height="15" fill="rgb(225,111,53)" fg:x="11045335852" fg:w="1645030354"/><text x="42.8611%" y="735.50">compiler..</text></g><g><title>hash.wyhash.Wyhash.final2 (4,269,372 samples, 0.02%)</title><rect x="48.9793%" y="709" width="0.0165%" height="15" fill="rgb(238,160,17)" fg:x="12696064217" fg:w="4269372"/><text x="49.2293%" y="719.50"></text></g><g><title>hash.wyhash.Wyhash.hash (19,807,878 samples, 0.08%)</title><rect x="48.9640%" y="725" width="0.0764%" height="15" fill="rgb(214,148,48)" fg:x="12692079031" fg:w="19807878"/><text x="49.2140%" y="735.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (11,553,320 samples, 0.04%)</title><rect x="48.9958%" y="709" width="0.0446%" height="15" fill="rgb(232,36,49)" fg:x="12700333589" fg:w="11553320"/><text x="49.2458%" y="719.50"></text></g><g><title>hash.wyhash.Wyhash.read (5,573,076 samples, 0.02%)</title><rect x="49.0189%" y="693" width="0.0215%" height="15" fill="rgb(209,103,24)" fg:x="12706313833" fg:w="5573076"/><text x="49.2689%" y="703.50"></text></g><g><title>hash_map.HashMapUnmanaged (7,059,485 samples, 0.03%)</title><rect x="49.0404%" y="725" width="0.0272%" height="15" fill="rgb(229,88,8)" fg:x="12711886909" fg:w="7059485"/><text x="49.2904%" y="735.50"></text></g><g><title>httpz.FallbackAllocator.resize (3,131,403 samples, 0.01%)</title><rect x="49.0676%" y="725" width="0.0121%" height="15" fill="rgb(213,181,19)" fg:x="12718946394" fg:w="3131403"/><text x="49.3176%" y="735.50"></text></g><g><title>multi_array_list.MultiArrayList (8,336,541 samples, 0.03%)</title><rect x="49.0797%" y="725" width="0.0322%" height="15" fill="rgb(254,191,54)" fg:x="12722077797" fg:w="8336541"/><text x="49.3297%" y="735.50"></text></g><g><title>compiler_rt.memcpy.memcpy (4,241,613 samples, 0.02%)</title><rect x="49.1445%" y="645" width="0.0164%" height="15" fill="rgb(241,83,37)" fg:x="12738881606" fg:w="4241613"/><text x="49.3945%" y="655.50"></text></g><g><title>debug.SafetyLock.unlock (2,757,531 samples, 0.01%)</title><rect x="49.1609%" y="645" width="0.0106%" height="15" fill="rgb(233,36,39)" fg:x="12743123219" fg:w="2757531"/><text x="49.4109%" y="655.50"></text></g><g><title>hash_map.HashMapUnmanaged (5,500,426 samples, 0.02%)</title><rect x="49.1780%" y="645" width="0.0212%" height="15" fill="rgb(226,3,54)" fg:x="12747554717" fg:w="5500426"/><text x="49.4280%" y="655.50"></text></g><g><title>compiler_rt.memset.memset (17,632,167 samples, 0.07%)</title><rect x="49.2218%" y="581" width="0.0680%" height="15" fill="rgb(245,192,40)" fg:x="12758920908" fg:w="17632167"/><text x="49.4718%" y="591.50"></text></g><g><title>[unknown] (17,632,167 samples, 0.07%)</title><rect x="49.2218%" y="565" width="0.0680%" height="15" fill="rgb(238,167,29)" fg:x="12758920908" fg:w="17632167"/><text x="49.4718%" y="575.50"></text></g><g><title>[unknown] (17,632,167 samples, 0.07%)</title><rect x="49.2218%" y="549" width="0.0680%" height="15" fill="rgb(232,182,51)" fg:x="12758920908" fg:w="17632167"/><text x="49.4718%" y="559.50"></text></g><g><title>[unknown] (17,632,167 samples, 0.07%)</title><rect x="49.2218%" y="533" width="0.0680%" height="15" fill="rgb(231,60,39)" fg:x="12758920908" fg:w="17632167"/><text x="49.4718%" y="543.50"></text></g><g><title>[unknown] (12,012,077 samples, 0.05%)</title><rect x="49.2435%" y="517" width="0.0463%" height="15" fill="rgb(208,69,12)" fg:x="12764540998" fg:w="12012077"/><text x="49.4935%" y="527.50"></text></g><g><title>[unknown] (12,012,077 samples, 0.05%)</title><rect x="49.2435%" y="501" width="0.0463%" height="15" fill="rgb(235,93,37)" fg:x="12764540998" fg:w="12012077"/><text x="49.4935%" y="511.50"></text></g><g><title>[unknown] (12,012,077 samples, 0.05%)</title><rect x="49.2435%" y="485" width="0.0463%" height="15" fill="rgb(213,116,39)" fg:x="12764540998" fg:w="12012077"/><text x="49.4935%" y="495.50"></text></g><g><title>[unknown] (12,012,077 samples, 0.05%)</title><rect x="49.2435%" y="469" width="0.0463%" height="15" fill="rgb(222,207,29)" fg:x="12764540998" fg:w="12012077"/><text x="49.4935%" y="479.50"></text></g><g><title>[unknown] (5,938,926 samples, 0.02%)</title><rect x="49.2669%" y="453" width="0.0229%" height="15" fill="rgb(206,96,30)" fg:x="12770614149" fg:w="5938926"/><text x="49.5169%" y="463.50"></text></g><g><title>[unknown] (5,938,926 samples, 0.02%)</title><rect x="49.2669%" y="437" width="0.0229%" height="15" fill="rgb(218,138,4)" fg:x="12770614149" fg:w="5938926"/><text x="49.5169%" y="447.50"></text></g><g><title>[unknown] (5,938,926 samples, 0.02%)</title><rect x="49.2669%" y="421" width="0.0229%" height="15" fill="rgb(250,191,14)" fg:x="12770614149" fg:w="5938926"/><text x="49.5169%" y="431.50"></text></g><g><title>[unknown] (4,265,379 samples, 0.02%)</title><rect x="49.2734%" y="405" width="0.0165%" height="15" fill="rgb(239,60,40)" fg:x="12772287696" fg:w="4265379"/><text x="49.5234%" y="415.50"></text></g><g><title>[unknown] (4,265,379 samples, 0.02%)</title><rect x="49.2734%" y="389" width="0.0165%" height="15" fill="rgb(206,27,48)" fg:x="12772287696" fg:w="4265379"/><text x="49.5234%" y="399.50"></text></g><g><title>[unknown] (4,265,379 samples, 0.02%)</title><rect x="49.2734%" y="373" width="0.0165%" height="15" fill="rgb(225,35,8)" fg:x="12772287696" fg:w="4265379"/><text x="49.5234%" y="383.50"></text></g><g><title>[unknown] (4,265,379 samples, 0.02%)</title><rect x="49.2734%" y="357" width="0.0165%" height="15" fill="rgb(250,213,24)" fg:x="12772287696" fg:w="4265379"/><text x="49.5234%" y="367.50"></text></g><g><title>[unknown] (4,265,379 samples, 0.02%)</title><rect x="49.2734%" y="341" width="0.0165%" height="15" fill="rgb(247,123,22)" fg:x="12772287696" fg:w="4265379"/><text x="49.5234%" y="351.50"></text></g><g><title>mem.Allocator.alignedAlloc__anon_13354 (28,561,518 samples, 0.11%)</title><rect x="49.2042%" y="645" width="0.1102%" height="15" fill="rgb(231,138,38)" fg:x="12754351551" fg:w="28561518"/><text x="49.4542%" y="655.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (28,561,518 samples, 0.11%)</title><rect x="49.2042%" y="629" width="0.1102%" height="15" fill="rgb(231,145,46)" fg:x="12754351551" fg:w="28561518"/><text x="49.4542%" y="639.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_7206 (28,561,518 samples, 0.11%)</title><rect x="49.2042%" y="613" width="0.1102%" height="15" fill="rgb(251,118,11)" fg:x="12754351551" fg:w="28561518"/><text x="49.4542%" y="623.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (25,239,114 samples, 0.10%)</title><rect x="49.2170%" y="597" width="0.0974%" height="15" fill="rgb(217,147,25)" fg:x="12757673955" fg:w="25239114"/><text x="49.4670%" y="607.50"></text></g><g><title>mem.Allocator.rawAlloc (6,359,994 samples, 0.02%)</title><rect x="49.2899%" y="581" width="0.0245%" height="15" fill="rgb(247,81,37)" fg:x="12776553075" fg:w="6359994"/><text x="49.5399%" y="591.50"></text></g><g><title>httpz.FallbackAllocator.alloc (6,359,994 samples, 0.02%)</title><rect x="49.2899%" y="565" width="0.0245%" height="15" fill="rgb(209,12,38)" fg:x="12776553075" fg:w="6359994"/><text x="49.5399%" y="575.50"></text></g><g><title>mem.Allocator.rawAlloc (6,359,994 samples, 0.02%)</title><rect x="49.2899%" y="549" width="0.0245%" height="15" fill="rgb(227,1,9)" fg:x="12776553075" fg:w="6359994"/><text x="49.5399%" y="559.50"></text></g><g><title>heap.FixedBufferAllocator.alloc (4,128,152 samples, 0.02%)</title><rect x="49.2985%" y="533" width="0.0159%" height="15" fill="rgb(248,47,43)" fg:x="12778784917" fg:w="4128152"/><text x="49.5485%" y="543.50"></text></g><g><title>mem.alignPointerOffset__anon_12919 (4,128,152 samples, 0.02%)</title><rect x="49.2985%" y="517" width="0.0159%" height="15" fill="rgb(221,10,30)" fg:x="12778784917" fg:w="4128152"/><text x="49.5485%" y="527.50"></text></g><g><title>debug.SafetyLock.lock (4,128,152 samples, 0.02%)</title><rect x="49.2985%" y="501" width="0.0159%" height="15" fill="rgb(210,229,1)" fg:x="12778784917" fg:w="4128152"/><text x="49.5485%" y="511.50"></text></g><g><title>array_list.ArrayListAligned (59,696,827 samples, 0.23%)</title><rect x="49.1119%" y="661" width="0.2303%" height="15" fill="rgb(222,148,37)" fg:x="12730414338" fg:w="59696827"/><text x="49.3619%" y="671.50"></text></g><g><title>mem.Allocator.resize__anon_13353 (5,596,662 samples, 0.02%)</title><rect x="49.3206%" y="645" width="0.0216%" height="15" fill="rgb(234,67,33)" fg:x="12784514503" fg:w="5596662"/><text x="49.5706%" y="655.50"></text></g><g><title>mem.Allocator.rawResize (5,596,662 samples, 0.02%)</title><rect x="49.3206%" y="629" width="0.0216%" height="15" fill="rgb(247,98,35)" fg:x="12784514503" fg:w="5596662"/><text x="49.5706%" y="639.50"></text></g><g><title>httpz.FallbackAllocator.resize (4,058,349 samples, 0.02%)</title><rect x="49.3265%" y="613" width="0.0157%" height="15" fill="rgb(247,138,52)" fg:x="12786052816" fg:w="4058349"/><text x="49.5765%" y="623.50"></text></g><g><title>mem.Allocator.rawResize (4,058,349 samples, 0.02%)</title><rect x="49.3265%" y="597" width="0.0157%" height="15" fill="rgb(213,79,30)" fg:x="12786052816" fg:w="4058349"/><text x="49.5765%" y="607.50"></text></g><g><title>hash.wyhash.Wyhash.hash (4,058,349 samples, 0.02%)</title><rect x="49.3265%" y="581" width="0.0157%" height="15" fill="rgb(246,177,23)" fg:x="12786052816" fg:w="4058349"/><text x="49.5765%" y="591.50"></text></g><g><title>array_list.ArrayListAligned (64,850,343 samples, 0.25%)</title><rect x="49.1119%" y="677" width="0.2502%" height="15" fill="rgb(230,62,27)" fg:x="12730414338" fg:w="64850343"/><text x="49.3619%" y="687.50"></text></g><g><title>navigation.constructNavigationGraph (2,673,106 samples, 0.01%)</title><rect x="49.3517%" y="661" width="0.0103%" height="15" fill="rgb(216,154,8)" fg:x="12792591575" fg:w="2673106"/><text x="49.6017%" y="671.50"></text></g><g><title>hash.wyhash.Wyhash.hash (3,259,939 samples, 0.01%)</title><rect x="49.3620%" y="677" width="0.0126%" height="15" fill="rgb(244,35,45)" fg:x="12795264681" fg:w="3259939"/><text x="49.6120%" y="687.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (3,259,939 samples, 0.01%)</title><rect x="49.3620%" y="661" width="0.0126%" height="15" fill="rgb(251,115,12)" fg:x="12795264681" fg:w="3259939"/><text x="49.6120%" y="671.50"></text></g><g><title>hash_map.HashMapUnmanaged (7,682,440 samples, 0.03%)</title><rect x="49.3746%" y="677" width="0.0296%" height="15" fill="rgb(240,54,50)" fg:x="12798524620" fg:w="7682440"/><text x="49.6246%" y="687.50"></text></g><g><title>array_list.ArrayListAligned (82,527,070 samples, 0.32%)</title><rect x="49.1119%" y="693" width="0.3184%" height="15" fill="rgb(233,84,52)" fg:x="12730414338" fg:w="82527070"/><text x="49.3619%" y="703.50"></text></g><g><title>navigation.constructNavigationGraph (4,264,584 samples, 0.02%)</title><rect x="49.4138%" y="677" width="0.0165%" height="15" fill="rgb(207,117,47)" fg:x="12808676824" fg:w="4264584"/><text x="49.6638%" y="687.50"></text></g><g><title>hash_map.HashMapUnmanaged (7,104,296 samples, 0.03%)</title><rect x="49.4417%" y="693" width="0.0274%" height="15" fill="rgb(249,43,39)" fg:x="12815915965" fg:w="7104296"/><text x="49.6917%" y="703.50"></text></g><g><title>heap.FixedBufferAllocator.alloc (4,076,683 samples, 0.02%)</title><rect x="49.4691%" y="693" width="0.0157%" height="15" fill="rgb(209,38,44)" fg:x="12823020261" fg:w="4076683"/><text x="49.7191%" y="703.50"></text></g><g><title>compiler_rt.memcpy.memcpy (4,108,681 samples, 0.02%)</title><rect x="49.5054%" y="677" width="0.0159%" height="15" fill="rgb(236,212,23)" fg:x="12832427849" fg:w="4108681"/><text x="49.7554%" y="687.50"></text></g><g><title>hash_map.HashMapUnmanaged (4,212,697 samples, 0.02%)</title><rect x="49.5213%" y="677" width="0.0163%" height="15" fill="rgb(242,79,21)" fg:x="12836536530" fg:w="4212697"/><text x="49.7713%" y="687.50"></text></g><g><title>debug.assert (3,061,658 samples, 0.01%)</title><rect x="49.5424%" y="661" width="0.0118%" height="15" fill="rgb(211,96,35)" fg:x="12842003361" fg:w="3061658"/><text x="49.7924%" y="671.50"></text></g><g><title>heap.FixedBufferAllocator.ownsPtr (3,998,720 samples, 0.02%)</title><rect x="49.5542%" y="645" width="0.0154%" height="15" fill="rgb(253,215,40)" fg:x="12845065019" fg:w="3998720"/><text x="49.8042%" y="655.50"></text></g><g><title>hash.wyhash.Wyhash.hash (3,998,720 samples, 0.02%)</title><rect x="49.5542%" y="629" width="0.0154%" height="15" fill="rgb(211,81,21)" fg:x="12845065019" fg:w="3998720"/><text x="49.8042%" y="639.50"></text></g><g><title>hash.wyhash.Wyhash.final2 (3,998,720 samples, 0.02%)</title><rect x="49.5542%" y="613" width="0.0154%" height="15" fill="rgb(208,190,38)" fg:x="12845065019" fg:w="3998720"/><text x="49.8042%" y="623.50"></text></g><g><title>compiler_rt.memcpy.memcpy (8,384,373 samples, 0.03%)</title><rect x="49.5750%" y="629" width="0.0323%" height="15" fill="rgb(235,213,38)" fg:x="12850464723" fg:w="8384373"/><text x="49.8250%" y="639.50"></text></g><g><title>httpz.FallbackAllocator.resize (17,145,067 samples, 0.07%)</title><rect x="49.5542%" y="661" width="0.0661%" height="15" fill="rgb(237,122,38)" fg:x="12845065019" fg:w="17145067"/><text x="49.8042%" y="671.50"></text></g><g><title>mem.Allocator.rawResize (13,146,347 samples, 0.05%)</title><rect x="49.5696%" y="645" width="0.0507%" height="15" fill="rgb(244,218,35)" fg:x="12849063739" fg:w="13146347"/><text x="49.8196%" y="655.50"></text></g><g><title>debug.assert (3,360,990 samples, 0.01%)</title><rect x="49.6073%" y="629" width="0.0130%" height="15" fill="rgb(240,68,47)" fg:x="12858849096" fg:w="3360990"/><text x="49.8573%" y="639.50"></text></g><g><title>mem.Allocator.resize__anon_13353 (37,000,856 samples, 0.14%)</title><rect x="49.4899%" y="693" width="0.1427%" height="15" fill="rgb(210,16,53)" fg:x="12828407696" fg:w="37000856"/><text x="49.7399%" y="703.50"></text></g><g><title>mem.Allocator.rawResize (23,405,191 samples, 0.09%)</title><rect x="49.5424%" y="677" width="0.0903%" height="15" fill="rgb(235,124,12)" fg:x="12842003361" fg:w="23405191"/><text x="49.7924%" y="687.50"></text></g><g><title>array_list.ArrayListAligned (141,006,622 samples, 0.54%)</title><rect x="49.1119%" y="709" width="0.5440%" height="15" fill="rgb(224,169,11)" fg:x="12730414338" fg:w="141006622"/><text x="49.3619%" y="719.50"></text></g><g><title>mem.alignPointerOffset__anon_12919 (6,012,408 samples, 0.02%)</title><rect x="49.6326%" y="693" width="0.0232%" height="15" fill="rgb(250,166,2)" fg:x="12865408552" fg:w="6012408"/><text x="49.8826%" y="703.50"></text></g><g><title>hash.wyhash.Wyhash.hash (3,604,206 samples, 0.01%)</title><rect x="49.6613%" y="629" width="0.0139%" height="15" fill="rgb(242,216,29)" fg:x="12872825627" fg:w="3604206"/><text x="49.9113%" y="639.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (3,604,206 samples, 0.01%)</title><rect x="49.6613%" y="613" width="0.0139%" height="15" fill="rgb(230,116,27)" fg:x="12872825627" fg:w="3604206"/><text x="49.9113%" y="623.50"></text></g><g><title>fmt.formatType__anon_12944 (5,246,002 samples, 0.02%)</title><rect x="49.6613%" y="677" width="0.0202%" height="15" fill="rgb(228,99,48)" fg:x="12872825627" fg:w="5246002"/><text x="49.9113%" y="687.50"></text></g><g><title>fmt.formatBuf__anon_14209 (5,246,002 samples, 0.02%)</title><rect x="49.6613%" y="661" width="0.0202%" height="15" fill="rgb(253,11,6)" fg:x="12872825627" fg:w="5246002"/><text x="49.9113%" y="671.50"></text></g><g><title>io.Writer.writeAll (5,246,002 samples, 0.02%)</title><rect x="49.6613%" y="645" width="0.0202%" height="15" fill="rgb(247,143,39)" fg:x="12872825627" fg:w="5246002"/><text x="49.9113%" y="655.50"></text></g><g><title>hash_map.HashMapUnmanaged (4,263,638 samples, 0.02%)</title><rect x="49.6815%" y="677" width="0.0164%" height="15" fill="rgb(236,97,10)" fg:x="12878071629" fg:w="4263638"/><text x="49.9315%" y="687.50"></text></g><g><title>fmt.bufPrint__anon_8431 (18,019,208 samples, 0.07%)</title><rect x="49.6613%" y="709" width="0.0695%" height="15" fill="rgb(233,208,19)" fg:x="12872825627" fg:w="18019208"/><text x="49.9113%" y="719.50"></text></g><g><title>fmt.format__anon_13352 (18,019,208 samples, 0.07%)</title><rect x="49.6613%" y="693" width="0.0695%" height="15" fill="rgb(216,164,2)" fg:x="12872825627" fg:w="18019208"/><text x="49.9113%" y="703.50"></text></g><g><title>io.Writer.writeAll (8,509,568 samples, 0.03%)</title><rect x="49.6979%" y="677" width="0.0328%" height="15" fill="rgb(220,129,5)" fg:x="12882335267" fg:w="8509568"/><text x="49.9479%" y="687.50"></text></g><g><title>io.Writer.write (8,509,568 samples, 0.03%)</title><rect x="49.6979%" y="661" width="0.0328%" height="15" fill="rgb(242,17,10)" fg:x="12882335267" fg:w="8509568"/><text x="49.9479%" y="671.50"></text></g><g><title>io.GenericWriter (8,509,568 samples, 0.03%)</title><rect x="49.6979%" y="645" width="0.0328%" height="15" fill="rgb(242,107,0)" fg:x="12882335267" fg:w="8509568"/><text x="49.9479%" y="655.50"></text></g><g><title>hash_map.HashMapUnmanaged (8,509,568 samples, 0.03%)</title><rect x="49.6979%" y="629" width="0.0328%" height="15" fill="rgb(251,28,31)" fg:x="12882335267" fg:w="8509568"/><text x="49.9479%" y="639.50"></text></g><g><title>hash.wyhash.Wyhash.hash (4,235,298 samples, 0.02%)</title><rect x="49.7308%" y="709" width="0.0163%" height="15" fill="rgb(233,223,10)" fg:x="12890844835" fg:w="4235298"/><text x="49.9808%" y="719.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (4,235,298 samples, 0.02%)</title><rect x="49.7308%" y="693" width="0.0163%" height="15" fill="rgb(215,21,27)" fg:x="12890844835" fg:w="4235298"/><text x="49.9808%" y="703.50"></text></g><g><title>hash.wyhash.Wyhash.read (4,235,298 samples, 0.02%)</title><rect x="49.7308%" y="677" width="0.0163%" height="15" fill="rgb(232,23,21)" fg:x="12890844835" fg:w="4235298"/><text x="49.9808%" y="687.50"></text></g><g><title>hash.wyhash.Wyhash.hash (7,002,009 samples, 0.03%)</title><rect x="49.7791%" y="677" width="0.0270%" height="15" fill="rgb(244,5,23)" fg:x="12903366512" fg:w="7002009"/><text x="50.0291%" y="687.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (7,002,009 samples, 0.03%)</title><rect x="49.7791%" y="661" width="0.0270%" height="15" fill="rgb(226,81,46)" fg:x="12903366512" fg:w="7002009"/><text x="50.0291%" y="671.50"></text></g><g><title>hash.wyhash.Wyhash.read (4,088,301 samples, 0.02%)</title><rect x="49.7903%" y="645" width="0.0158%" height="15" fill="rgb(247,70,30)" fg:x="12906280220" fg:w="4088301"/><text x="50.0403%" y="655.50"></text></g><g><title>hash.wyhash.Wyhash.hash (2,684,797 samples, 0.01%)</title><rect x="49.8119%" y="661" width="0.0104%" height="15" fill="rgb(212,68,19)" fg:x="12911883960" fg:w="2684797"/><text x="50.0619%" y="671.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (2,684,797 samples, 0.01%)</title><rect x="49.8119%" y="645" width="0.0104%" height="15" fill="rgb(240,187,13)" fg:x="12911883960" fg:w="2684797"/><text x="50.0619%" y="655.50"></text></g><g><title>array_list.ArrayListAligned (2,904,825 samples, 0.01%)</title><rect x="49.8290%" y="645" width="0.0112%" height="15" fill="rgb(223,113,26)" fg:x="12916296383" fg:w="2904825"/><text x="50.0790%" y="655.50"></text></g><g><title>debug.SafetyLock.unlock (4,243,707 samples, 0.02%)</title><rect x="49.8459%" y="645" width="0.0164%" height="15" fill="rgb(206,192,2)" fg:x="12920685152" fg:w="4243707"/><text x="50.0959%" y="655.50"></text></g><g><title>heap.arena_allocator.ArenaAllocator.alloc (4,243,707 samples, 0.02%)</title><rect x="49.8459%" y="629" width="0.0164%" height="15" fill="rgb(241,108,4)" fg:x="12920685152" fg:w="4243707"/><text x="50.0959%" y="639.50"></text></g><g><title>debug.assert (8,643,386 samples, 0.03%)</title><rect x="49.8623%" y="645" width="0.0333%" height="15" fill="rgb(247,173,49)" fg:x="12924928859" fg:w="8643386"/><text x="50.1123%" y="655.50"></text></g><g><title>hash.wyhash.Wyhash.hash (19,711,271 samples, 0.08%)</title><rect x="49.8956%" y="645" width="0.0760%" height="15" fill="rgb(224,114,35)" fg:x="12933572245" fg:w="19711271"/><text x="50.1456%" y="655.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (17,960,449 samples, 0.07%)</title><rect x="49.9024%" y="629" width="0.0693%" height="15" fill="rgb(245,159,27)" fg:x="12935323067" fg:w="17960449"/><text x="50.1524%" y="639.50"></text></g><g><title>hash.wyhash.Wyhash.read (3,659,565 samples, 0.01%)</title><rect x="49.9575%" y="613" width="0.0141%" height="15" fill="rgb(245,172,44)" fg:x="12949623951" fg:w="3659565"/><text x="50.2075%" y="623.50"></text></g><g><title>hash.wyhash.Wyhash.hash (2,762,396 samples, 0.01%)</title><rect x="50.0753%" y="613" width="0.0107%" height="15" fill="rgb(236,23,11)" fg:x="12980144574" fg:w="2762396"/><text x="50.3253%" y="623.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (2,762,396 samples, 0.01%)</title><rect x="50.0753%" y="597" width="0.0107%" height="15" fill="rgb(205,117,38)" fg:x="12980144574" fg:w="2762396"/><text x="50.3253%" y="607.50"></text></g><g><title>hash.wyhash.Wyhash.read (2,762,396 samples, 0.01%)</title><rect x="50.0753%" y="581" width="0.0107%" height="15" fill="rgb(237,72,25)" fg:x="12980144574" fg:w="2762396"/><text x="50.3253%" y="591.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (5,663,952 samples, 0.02%)</title><rect x="50.1475%" y="517" width="0.0219%" height="15" fill="rgb(244,70,9)" fg:x="12998860687" fg:w="5663952"/><text x="50.3975%" y="527.50"></text></g><g><title>hash.wyhash.Wyhash.read (5,663,952 samples, 0.02%)</title><rect x="50.1475%" y="501" width="0.0219%" height="15" fill="rgb(217,125,39)" fg:x="12998860687" fg:w="5663952"/><text x="50.3975%" y="511.50"></text></g><g><title>hash.wyhash.Wyhash.hash (4,237,355 samples, 0.02%)</title><rect x="50.1530%" y="485" width="0.0163%" height="15" fill="rgb(235,36,10)" fg:x="13000287284" fg:w="4237355"/><text x="50.4030%" y="495.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (4,237,355 samples, 0.02%)</title><rect x="50.1530%" y="469" width="0.0163%" height="15" fill="rgb(251,123,47)" fg:x="13000287284" fg:w="4237355"/><text x="50.4030%" y="479.50"></text></g><g><title>hash_map.HashMapUnmanaged (18,579,697 samples, 0.07%)</title><rect x="50.1303%" y="597" width="0.0717%" height="15" fill="rgb(221,13,13)" fg:x="12994405625" fg:w="18579697"/><text x="50.3803%" y="607.50"></text></g><g><title>hash_map.HashMapUnmanaged (16,913,754 samples, 0.07%)</title><rect x="50.1367%" y="581" width="0.0653%" height="15" fill="rgb(238,131,9)" fg:x="12996071568" fg:w="16913754"/><text x="50.3867%" y="591.50"></text></g><g><title>hash_map.HashMapUnmanaged (16,913,754 samples, 0.07%)</title><rect x="50.1367%" y="565" width="0.0653%" height="15" fill="rgb(211,50,8)" fg:x="12996071568" fg:w="16913754"/><text x="50.3867%" y="575.50"></text></g><g><title>hash_map.getAutoHashFn__struct_13347.hash (15,509,598 samples, 0.06%)</title><rect x="50.1421%" y="549" width="0.0598%" height="15" fill="rgb(245,182,24)" fg:x="12997475724" fg:w="15509598"/><text x="50.3921%" y="559.50"></text></g><g><title>hash.wyhash.Wyhash.hash (14,124,635 samples, 0.05%)</title><rect x="50.1475%" y="533" width="0.0545%" height="15" fill="rgb(242,14,37)" fg:x="12998860687" fg:w="14124635"/><text x="50.3975%" y="543.50"></text></g><g><title>hash_map.HashMapUnmanaged (8,460,683 samples, 0.03%)</title><rect x="50.1693%" y="517" width="0.0326%" height="15" fill="rgb(246,228,12)" fg:x="13004524639" fg:w="8460683"/><text x="50.4193%" y="527.50"></text></g><g><title>hash.wyhash.Wyhash.final2 (4,230,016 samples, 0.02%)</title><rect x="50.2068%" y="565" width="0.0163%" height="15" fill="rgb(213,55,15)" fg:x="13014240927" fg:w="4230016"/><text x="50.4568%" y="575.50"></text></g><g><title>hash.wyhash.Wyhash.hash (5,524,559 samples, 0.02%)</title><rect x="50.2231%" y="565" width="0.0213%" height="15" fill="rgb(209,9,3)" fg:x="13018470943" fg:w="5524559"/><text x="50.4731%" y="575.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (5,524,559 samples, 0.02%)</title><rect x="50.2231%" y="549" width="0.0213%" height="15" fill="rgb(230,59,30)" fg:x="13018470943" fg:w="5524559"/><text x="50.4731%" y="559.50"></text></g><g><title>hash.wyhash.Wyhash.read (4,257,144 samples, 0.02%)</title><rect x="50.2280%" y="533" width="0.0164%" height="15" fill="rgb(209,121,21)" fg:x="13019738358" fg:w="4257144"/><text x="50.4780%" y="543.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (11,698,723 samples, 0.05%)</title><rect x="50.2444%" y="565" width="0.0451%" height="15" fill="rgb(220,109,13)" fg:x="13023995502" fg:w="11698723"/><text x="50.4944%" y="575.50"></text></g><g><title>hash.wyhash.Wyhash.read (6,058,195 samples, 0.02%)</title><rect x="50.2662%" y="549" width="0.0234%" height="15" fill="rgb(232,18,1)" fg:x="13029636030" fg:w="6058195"/><text x="50.5162%" y="559.50"></text></g><g><title>hash.wyhash.Wyhash.hash (25,579,831 samples, 0.10%)</title><rect x="50.2020%" y="581" width="0.0987%" height="15" fill="rgb(215,41,42)" fg:x="13012985322" fg:w="25579831"/><text x="50.4520%" y="591.50"></text></g><g><title>hash_map.HashMapUnmanaged (2,870,928 samples, 0.01%)</title><rect x="50.2896%" y="565" width="0.0111%" height="15" fill="rgb(224,123,36)" fg:x="13035694225" fg:w="2870928"/><text x="50.5396%" y="575.50"></text></g><g><title>hash.wyhash.Wyhash.init (2,734,076 samples, 0.01%)</title><rect x="50.3007%" y="581" width="0.0105%" height="15" fill="rgb(240,125,3)" fg:x="13038565153" fg:w="2734076"/><text x="50.5507%" y="591.50"></text></g><g><title>hash_map.getAutoHashFn__struct_13347.hash (29,734,816 samples, 0.11%)</title><rect x="50.2020%" y="597" width="0.1147%" height="15" fill="rgb(205,98,50)" fg:x="13012985322" fg:w="29734816"/><text x="50.4520%" y="607.50"></text></g><g><title>hash_map.HashMapUnmanaged (83,641,302 samples, 0.32%)</title><rect x="50.0544%" y="629" width="0.3227%" height="15" fill="rgb(205,185,37)" fg:x="12974729087" fg:w="83641302"/><text x="50.3044%" y="639.50"></text></g><g><title>hash_map.HashMapUnmanaged (75,463,419 samples, 0.29%)</title><rect x="50.0859%" y="613" width="0.2911%" height="15" fill="rgb(238,207,15)" fg:x="12982906970" fg:w="75463419"/><text x="50.3359%" y="623.50"></text></g><g><title>mem.Allocator.alignedAlloc__anon_8944 (15,650,251 samples, 0.06%)</title><rect x="50.3167%" y="597" width="0.0604%" height="15" fill="rgb(213,199,42)" fg:x="13042720138" fg:w="15650251"/><text x="50.5667%" y="607.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (15,650,251 samples, 0.06%)</title><rect x="50.3167%" y="581" width="0.0604%" height="15" fill="rgb(235,201,11)" fg:x="13042720138" fg:w="15650251"/><text x="50.5667%" y="591.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_13385 (15,650,251 samples, 0.06%)</title><rect x="50.3167%" y="565" width="0.0604%" height="15" fill="rgb(207,46,11)" fg:x="13042720138" fg:w="15650251"/><text x="50.5667%" y="575.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (15,650,251 samples, 0.06%)</title><rect x="50.3167%" y="549" width="0.0604%" height="15" fill="rgb(241,35,35)" fg:x="13042720138" fg:w="15650251"/><text x="50.5667%" y="559.50"></text></g><g><title>compiler_rt.memset.memset (15,650,251 samples, 0.06%)</title><rect x="50.3167%" y="533" width="0.0604%" height="15" fill="rgb(243,32,47)" fg:x="13042720138" fg:w="15650251"/><text x="50.5667%" y="543.50"></text></g><g><title>[unknown] (15,650,251 samples, 0.06%)</title><rect x="50.3167%" y="517" width="0.0604%" height="15" fill="rgb(247,202,23)" fg:x="13042720138" fg:w="15650251"/><text x="50.5667%" y="527.50"></text></g><g><title>[unknown] (15,650,251 samples, 0.06%)</title><rect x="50.3167%" y="501" width="0.0604%" height="15" fill="rgb(219,102,11)" fg:x="13042720138" fg:w="15650251"/><text x="50.5667%" y="511.50"></text></g><g><title>[unknown] (15,650,251 samples, 0.06%)</title><rect x="50.3167%" y="485" width="0.0604%" height="15" fill="rgb(243,110,44)" fg:x="13042720138" fg:w="15650251"/><text x="50.5667%" y="495.50"></text></g><g><title>[unknown] (15,650,251 samples, 0.06%)</title><rect x="50.3167%" y="469" width="0.0604%" height="15" fill="rgb(222,74,54)" fg:x="13042720138" fg:w="15650251"/><text x="50.5667%" y="479.50"></text></g><g><title>[unknown] (15,650,251 samples, 0.06%)</title><rect x="50.3167%" y="453" width="0.0604%" height="15" fill="rgb(216,99,12)" fg:x="13042720138" fg:w="15650251"/><text x="50.5667%" y="463.50"></text></g><g><title>[unknown] (14,246,551 samples, 0.05%)</title><rect x="50.3221%" y="437" width="0.0550%" height="15" fill="rgb(226,22,26)" fg:x="13044123838" fg:w="14246551"/><text x="50.5721%" y="447.50"></text></g><g><title>[unknown] (14,246,551 samples, 0.05%)</title><rect x="50.3221%" y="421" width="0.0550%" height="15" fill="rgb(217,163,10)" fg:x="13044123838" fg:w="14246551"/><text x="50.5721%" y="431.50"></text></g><g><title>[unknown] (14,246,551 samples, 0.05%)</title><rect x="50.3221%" y="405" width="0.0550%" height="15" fill="rgb(213,25,53)" fg:x="13044123838" fg:w="14246551"/><text x="50.5721%" y="415.50"></text></g><g><title>[unknown] (14,246,551 samples, 0.05%)</title><rect x="50.3221%" y="389" width="0.0550%" height="15" fill="rgb(252,105,26)" fg:x="13044123838" fg:w="14246551"/><text x="50.5721%" y="399.50"></text></g><g><title>[unknown] (8,454,254 samples, 0.03%)</title><rect x="50.3444%" y="373" width="0.0326%" height="15" fill="rgb(220,39,43)" fg:x="13049916135" fg:w="8454254"/><text x="50.5944%" y="383.50"></text></g><g><title>[unknown] (8,454,254 samples, 0.03%)</title><rect x="50.3444%" y="357" width="0.0326%" height="15" fill="rgb(229,68,48)" fg:x="13049916135" fg:w="8454254"/><text x="50.5944%" y="367.50"></text></g><g><title>[unknown] (4,234,348 samples, 0.02%)</title><rect x="50.3607%" y="341" width="0.0163%" height="15" fill="rgb(252,8,32)" fg:x="13054136041" fg:w="4234348"/><text x="50.6107%" y="351.50"></text></g><g><title>[unknown] (4,234,348 samples, 0.02%)</title><rect x="50.3607%" y="325" width="0.0163%" height="15" fill="rgb(223,20,43)" fg:x="13054136041" fg:w="4234348"/><text x="50.6107%" y="335.50"></text></g><g><title>array_list.ArrayListAligned (2,959,269 samples, 0.01%)</title><rect x="50.3827%" y="613" width="0.0114%" height="15" fill="rgb(229,81,49)" fg:x="13059822414" fg:w="2959269"/><text x="50.6327%" y="623.50"></text></g><g><title>compiler_rt.memcpy.memcpy (3,893,792 samples, 0.02%)</title><rect x="50.4072%" y="597" width="0.0150%" height="15" fill="rgb(236,28,36)" fg:x="13066182758" fg:w="3893792"/><text x="50.6572%" y="607.50"></text></g><g><title>hash_map.HashMapUnmanaged (4,175,979 samples, 0.02%)</title><rect x="50.4646%" y="565" width="0.0161%" height="15" fill="rgb(249,185,26)" fg:x="13081066423" fg:w="4175979"/><text x="50.7146%" y="575.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (17,738,676 samples, 0.07%)</title><rect x="50.4283%" y="597" width="0.0684%" height="15" fill="rgb(249,174,33)" fg:x="13071640760" fg:w="17738676"/><text x="50.6783%" y="607.50"></text></g><g><title>hash.wyhash.Wyhash.read (9,656,598 samples, 0.04%)</title><rect x="50.4594%" y="581" width="0.0373%" height="15" fill="rgb(233,201,37)" fg:x="13079722838" fg:w="9656598"/><text x="50.7094%" y="591.50"></text></g><g><title>mem.readInt (4,137,034 samples, 0.02%)</title><rect x="50.4807%" y="565" width="0.0160%" height="15" fill="rgb(221,78,26)" fg:x="13085242402" fg:w="4137034"/><text x="50.7307%" y="575.50"></text></g><g><title>heap.FixedBufferAllocator.alloc (4,219,856 samples, 0.02%)</title><rect x="50.5025%" y="597" width="0.0163%" height="15" fill="rgb(250,127,30)" fg:x="13090881251" fg:w="4219856"/><text x="50.7525%" y="607.50"></text></g><g><title>mem.alignBackward__anon_12072 (3,557,066 samples, 0.01%)</title><rect x="50.5263%" y="597" width="0.0137%" height="15" fill="rgb(230,49,44)" fg:x="13097042836" fg:w="3557066"/><text x="50.7763%" y="607.50"></text></g><g><title>hash.wyhash.Wyhash.hash (37,597,976 samples, 0.15%)</title><rect x="50.4002%" y="613" width="0.1450%" height="15" fill="rgb(229,67,23)" fg:x="13064371901" fg:w="37597976"/><text x="50.6502%" y="623.50"></text></g><g><title>hash_map.HashMapUnmanaged (11,965,213 samples, 0.05%)</title><rect x="50.5453%" y="613" width="0.0462%" height="15" fill="rgb(249,83,47)" fg:x="13101969877" fg:w="11965213"/><text x="50.7953%" y="623.50"></text></g><g><title>heap.arena_allocator.ArenaAllocator.alloc (8,475,046 samples, 0.03%)</title><rect x="50.5914%" y="613" width="0.0327%" height="15" fill="rgb(215,43,3)" fg:x="13113935090" fg:w="8475046"/><text x="50.8414%" y="623.50"></text></g><g><title>heap.arena_allocator.ArenaAllocator.resize (4,563,925 samples, 0.02%)</title><rect x="50.6241%" y="613" width="0.0176%" height="15" fill="rgb(238,154,13)" fg:x="13122410136" fg:w="4563925"/><text x="50.8741%" y="623.50"></text></g><g><title>mem.alignBackward__anon_12072 (3,791,004 samples, 0.01%)</title><rect x="50.6478%" y="613" width="0.0146%" height="15" fill="rgb(219,56,2)" fg:x="13128538987" fg:w="3791004"/><text x="50.8978%" y="623.50"></text></g><g><title>hash_map.getAutoHashFn__struct_13347.hash (73,852,640 samples, 0.28%)</title><rect x="50.3827%" y="629" width="0.2849%" height="15" fill="rgb(233,0,4)" fg:x="13059822414" fg:w="73852640"/><text x="50.6327%" y="639.50"></text></g><g><title>hash_map.HashMapUnmanaged (184,635,372 samples, 0.71%)</title><rect x="49.9717%" y="645" width="0.7123%" height="15" fill="rgb(235,30,7)" fg:x="12953283516" fg:w="184635372"/><text x="50.2217%" y="655.50"></text></g><g><title>mem.sliceAsBytes__anon_14278 (4,243,834 samples, 0.02%)</title><rect x="50.6676%" y="629" width="0.0164%" height="15" fill="rgb(250,79,13)" fg:x="13133675054" fg:w="4243834"/><text x="50.9176%" y="639.50"></text></g><g><title>httpz.FallbackAllocator.resize (4,246,479 samples, 0.02%)</title><rect x="50.6897%" y="645" width="0.0164%" height="15" fill="rgb(211,146,34)" fg:x="13139417792" fg:w="4246479"/><text x="50.9397%" y="655.50"></text></g><g><title>mem.Allocator.resize__anon_13353 (3,409,009 samples, 0.01%)</title><rect x="50.7061%" y="645" width="0.0132%" height="15" fill="rgb(228,22,38)" fg:x="13143664271" fg:w="3409009"/><text x="50.9561%" y="655.50"></text></g><g><title>navigation.constructNavigationGraph (4,849,805 samples, 0.02%)</title><rect x="50.7193%" y="645" width="0.0187%" height="15" fill="rgb(235,168,5)" fg:x="13147073280" fg:w="4849805"/><text x="50.9693%" y="655.50"></text></g><g><title>hash_map.HashMapUnmanaged (239,872,397 samples, 0.93%)</title><rect x="49.8290%" y="661" width="0.9254%" height="15" fill="rgb(221,155,16)" fg:x="12916296383" fg:w="239872397"/><text x="50.0790%" y="671.50"></text></g><g><title>static_string_map.defaultEql (4,245,695 samples, 0.02%)</title><rect x="50.7380%" y="645" width="0.0164%" height="15" fill="rgb(215,215,53)" fg:x="13151923085" fg:w="4245695"/><text x="50.9880%" y="655.50"></text></g><g><title>hash_map.HashMap (265,248,905 samples, 1.02%)</title><rect x="49.7526%" y="709" width="1.0233%" height="15" fill="rgb(223,4,10)" fg:x="12896498181" fg:w="265248905"/><text x="50.0026%" y="719.50"></text></g><g><title>hash_map.HashMapUnmanaged (263,859,508 samples, 1.02%)</title><rect x="49.7579%" y="693" width="1.0179%" height="15" fill="rgb(234,103,6)" fg:x="12897887578" fg:w="263859508"/><text x="50.0079%" y="703.50"></text></g><g><title>hash_map.HashMapUnmanaged (251,378,565 samples, 0.97%)</title><rect x="49.8061%" y="677" width="0.9698%" height="15" fill="rgb(227,97,0)" fg:x="12910368521" fg:w="251378565"/><text x="50.0561%" y="687.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_7206 (4,247,557 samples, 0.02%)</title><rect x="50.7595%" y="661" width="0.0164%" height="15" fill="rgb(234,150,53)" fg:x="13157499529" fg:w="4247557"/><text x="51.0095%" y="671.50"></text></g><g><title>hash_map.HashMapUnmanaged (6,555,788 samples, 0.03%)</title><rect x="50.7759%" y="709" width="0.0253%" height="15" fill="rgb(228,201,54)" fg:x="13161747086" fg:w="6555788"/><text x="51.0259%" y="719.50"></text></g><g><title>navigation.constructNavigationGraph (3,924,768 samples, 0.02%)</title><rect x="50.8059%" y="709" width="0.0151%" height="15" fill="rgb(222,22,37)" fg:x="13169518728" fg:w="3924768"/><text x="51.0559%" y="719.50"></text></g><g><title>fmt.bufPrint__anon_8431 (4,111,534 samples, 0.02%)</title><rect x="50.8210%" y="677" width="0.0159%" height="15" fill="rgb(237,53,32)" fg:x="13173443496" fg:w="4111534"/><text x="51.0710%" y="687.50"></text></g><g><title>fmt.formatType__anon_12944 (3,692,241 samples, 0.01%)</title><rect x="50.8369%" y="677" width="0.0142%" height="15" fill="rgb(233,25,53)" fg:x="13177555030" fg:w="3692241"/><text x="51.0869%" y="687.50"></text></g><g><title>navigation.constructNavigationGraph (452,246,812 samples, 1.74%)</title><rect x="49.1119%" y="725" width="1.7447%" height="15" fill="rgb(210,40,34)" fg:x="12730414338" fg:w="452246812"/><text x="49.3619%" y="735.50"></text></g><g><title>static_string_map.StaticStringMapWithEql (9,217,654 samples, 0.04%)</title><rect x="50.8210%" y="709" width="0.0356%" height="15" fill="rgb(241,220,44)" fg:x="13173443496" fg:w="9217654"/><text x="51.0710%" y="719.50"></text></g><g><title>static_string_map.StaticStringMapWithEql (9,217,654 samples, 0.04%)</title><rect x="50.8210%" y="693" width="0.0356%" height="15" fill="rgb(235,28,35)" fg:x="13173443496" fg:w="9217654"/><text x="51.0710%" y="703.50"></text></g><g><title>[unknown] (12,712,809 samples, 0.05%)</title><rect x="56.9775%" y="709" width="0.0490%" height="15" fill="rgb(210,56,17)" fg:x="14769291328" fg:w="12712809"/><text x="57.2275%" y="719.50"></text></g><g><title>[unknown] (12,712,809 samples, 0.05%)</title><rect x="56.9775%" y="693" width="0.0490%" height="15" fill="rgb(224,130,29)" fg:x="14769291328" fg:w="12712809"/><text x="57.2275%" y="703.50"></text></g><g><title>[unknown] (12,712,809 samples, 0.05%)</title><rect x="56.9775%" y="677" width="0.0490%" height="15" fill="rgb(235,212,8)" fg:x="14769291328" fg:w="12712809"/><text x="57.2275%" y="687.50"></text></g><g><title>[unknown] (8,442,999 samples, 0.03%)</title><rect x="56.9940%" y="661" width="0.0326%" height="15" fill="rgb(223,33,50)" fg:x="14773561138" fg:w="8442999"/><text x="57.2440%" y="671.50"></text></g><g><title>[unknown] (8,442,999 samples, 0.03%)</title><rect x="56.9940%" y="645" width="0.0326%" height="15" fill="rgb(219,149,13)" fg:x="14773561138" fg:w="8442999"/><text x="57.2440%" y="655.50"></text></g><g><title>[unknown] (8,442,999 samples, 0.03%)</title><rect x="56.9940%" y="629" width="0.0326%" height="15" fill="rgb(250,156,29)" fg:x="14773561138" fg:w="8442999"/><text x="57.2440%" y="639.50"></text></g><g><title>[unknown] (4,239,045 samples, 0.02%)</title><rect x="57.0102%" y="613" width="0.0164%" height="15" fill="rgb(216,193,19)" fg:x="14777765092" fg:w="4239045"/><text x="57.2602%" y="623.50"></text></g><g><title>[unknown] (4,239,045 samples, 0.02%)</title><rect x="57.0102%" y="597" width="0.0164%" height="15" fill="rgb(216,135,14)" fg:x="14777765092" fg:w="4239045"/><text x="57.2602%" y="607.50"></text></g><g><title>array_hash_map.ArrayHashMap (4,193,235 samples, 0.02%)</title><rect x="57.0919%" y="629" width="0.0162%" height="15" fill="rgb(241,47,5)" fg:x="14798929506" fg:w="4193235"/><text x="57.3419%" y="639.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (16,433,143 samples, 0.06%)</title><rect x="57.1403%" y="597" width="0.0634%" height="15" fill="rgb(233,42,35)" fg:x="14811499136" fg:w="16433143"/><text x="57.3903%" y="607.50"></text></g><g><title>array_hash_map.getAutoHashFn__struct_14487.hash (12,251,382 samples, 0.05%)</title><rect x="57.1565%" y="581" width="0.0473%" height="15" fill="rgb(231,13,6)" fg:x="14815680897" fg:w="12251382"/><text x="57.4065%" y="591.50"></text></g><g><title>hash.wyhash.Wyhash.hash (12,251,382 samples, 0.05%)</title><rect x="57.1565%" y="565" width="0.0473%" height="15" fill="rgb(207,181,40)" fg:x="14815680897" fg:w="12251382"/><text x="57.4065%" y="575.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (8,400,980 samples, 0.03%)</title><rect x="57.1713%" y="549" width="0.0324%" height="15" fill="rgb(254,173,49)" fg:x="14819531299" fg:w="8400980"/><text x="57.4213%" y="559.50"></text></g><g><title>hash.wyhash.Wyhash.read (4,202,917 samples, 0.02%)</title><rect x="57.1875%" y="533" width="0.0162%" height="15" fill="rgb(221,1,38)" fg:x="14823729362" fg:w="4202917"/><text x="57.4375%" y="543.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (4,177,804 samples, 0.02%)</title><rect x="57.2037%" y="581" width="0.0161%" height="15" fill="rgb(206,124,46)" fg:x="14827932279" fg:w="4177804"/><text x="57.4537%" y="591.50"></text></g><g><title>array_hash_map.IndexHeader.mask (8,472,689 samples, 0.03%)</title><rect x="57.2199%" y="581" width="0.0327%" height="15" fill="rgb(249,21,11)" fg:x="14832110083" fg:w="8472689"/><text x="57.4699%" y="591.50"></text></g><g><title>compiler_rt.memcpy.memcpy (4,176,488 samples, 0.02%)</title><rect x="57.2525%" y="581" width="0.0161%" height="15" fill="rgb(222,201,40)" fg:x="14840582772" fg:w="4176488"/><text x="57.5025%" y="591.50"></text></g><g><title>array_hash_map.getAutoEqlFn__struct_14289.eql (4,197,063 samples, 0.02%)</title><rect x="57.2687%" y="565" width="0.0162%" height="15" fill="rgb(235,61,29)" fg:x="14844759260" fg:w="4197063"/><text x="57.5187%" y="575.50"></text></g><g><title>hash.wyhash.Wyhash.final2 (4,265,412 samples, 0.02%)</title><rect x="57.2848%" y="565" width="0.0165%" height="15" fill="rgb(219,207,3)" fg:x="14848956323" fg:w="4265412"/><text x="57.5348%" y="575.50"></text></g><g><title>hash.wyhash.Wyhash.mum (4,265,412 samples, 0.02%)</title><rect x="57.2848%" y="549" width="0.0165%" height="15" fill="rgb(222,56,46)" fg:x="14848956323" fg:w="4265412"/><text x="57.5348%" y="559.50"></text></g><g><title>hash.wyhash.Wyhash.final2 (4,263,524 samples, 0.02%)</title><rect x="57.3013%" y="549" width="0.0164%" height="15" fill="rgb(239,76,54)" fg:x="14853221735" fg:w="4263524"/><text x="57.5513%" y="559.50"></text></g><g><title>hash.wyhash.Wyhash.mum (4,263,524 samples, 0.02%)</title><rect x="57.3013%" y="533" width="0.0164%" height="15" fill="rgb(231,124,27)" fg:x="14853221735" fg:w="4263524"/><text x="57.5513%" y="543.50"></text></g><g><title>hash.wyhash.Wyhash.hash (16,924,590 samples, 0.07%)</title><rect x="57.2687%" y="581" width="0.0653%" height="15" fill="rgb(249,195,6)" fg:x="14844759260" fg:w="16924590"/><text x="57.5187%" y="591.50"></text></g><g><title>hash.wyhash.Wyhash.hash (8,462,115 samples, 0.03%)</title><rect x="57.3013%" y="565" width="0.0326%" height="15" fill="rgb(237,174,47)" fg:x="14853221735" fg:w="8462115"/><text x="57.5513%" y="575.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (4,198,591 samples, 0.02%)</title><rect x="57.3178%" y="549" width="0.0162%" height="15" fill="rgb(206,201,31)" fg:x="14857485259" fg:w="4198591"/><text x="57.5678%" y="559.50"></text></g><g><title>hash.wyhash.Wyhash.init (4,197,776 samples, 0.02%)</title><rect x="57.3339%" y="581" width="0.0162%" height="15" fill="rgb(231,57,52)" fg:x="14861683850" fg:w="4197776"/><text x="57.5839%" y="591.50"></text></g><g><title>hash_map.HashMapUnmanaged (4,268,362 samples, 0.02%)</title><rect x="57.3501%" y="581" width="0.0165%" height="15" fill="rgb(248,177,22)" fg:x="14865881626" fg:w="4268362"/><text x="57.6001%" y="591.50"></text></g><g><title>meta.eql__anon_14489 (4,249,533 samples, 0.02%)</title><rect x="57.3666%" y="581" width="0.0164%" height="15" fill="rgb(215,211,37)" fg:x="14870149988" fg:w="4249533"/><text x="57.6166%" y="591.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (66,791,562 samples, 0.26%)</title><rect x="57.1403%" y="613" width="0.2577%" height="15" fill="rgb(241,128,51)" fg:x="14811499136" fg:w="66791562"/><text x="57.3903%" y="623.50"></text></g><g><title>array_hash_map.getAutoHashFn__struct_14487.hash (50,358,419 samples, 0.19%)</title><rect x="57.2037%" y="597" width="0.1943%" height="15" fill="rgb(227,165,31)" fg:x="14827932279" fg:w="50358419"/><text x="57.4537%" y="607.50"></text></g><g><title>multi_array_list.MultiArrayList (3,891,177 samples, 0.02%)</title><rect x="57.3830%" y="581" width="0.0150%" height="15" fill="rgb(228,167,24)" fg:x="14874399521" fg:w="3891177"/><text x="57.6330%" y="591.50"></text></g><g><title>compiler_rt.memcpy.memcpy (4,201,455 samples, 0.02%)</title><rect x="57.3980%" y="613" width="0.0162%" height="15" fill="rgb(228,143,12)" fg:x="14878290698" fg:w="4201455"/><text x="57.6480%" y="623.50"></text></g><g><title>hash.wyhash.Wyhash.hash (7,887,340 samples, 0.03%)</title><rect x="57.4142%" y="613" width="0.0304%" height="15" fill="rgb(249,149,8)" fg:x="14882492153" fg:w="7887340"/><text x="57.6642%" y="623.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (7,887,340 samples, 0.03%)</title><rect x="57.4142%" y="597" width="0.0304%" height="15" fill="rgb(243,35,44)" fg:x="14882492153" fg:w="7887340"/><text x="57.6642%" y="607.50"></text></g><g><title>hash_map.HashMapUnmanaged (4,193,796 samples, 0.02%)</title><rect x="57.4447%" y="613" width="0.0162%" height="15" fill="rgb(246,89,9)" fg:x="14890379493" fg:w="4193796"/><text x="57.6947%" y="623.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (99,786,468 samples, 0.38%)</title><rect x="57.1080%" y="629" width="0.3850%" height="15" fill="rgb(233,213,13)" fg:x="14803122741" fg:w="99786468"/><text x="57.3580%" y="639.50"></text></g><g><title>multi_array_list.MultiArrayList (8,335,920 samples, 0.03%)</title><rect x="57.4608%" y="613" width="0.0322%" height="15" fill="rgb(233,141,41)" fg:x="14894573289" fg:w="8335920"/><text x="57.7108%" y="623.50"></text></g><g><title>hash.wyhash.Wyhash.hash (4,166,081 samples, 0.02%)</title><rect x="57.4769%" y="597" width="0.0161%" height="15" fill="rgb(239,167,4)" fg:x="14898743128" fg:w="4166081"/><text x="57.7269%" y="607.50"></text></g><g><title>array_hash_map.IndexHeader.indexes__anon_14287 (4,267,889 samples, 0.02%)</title><rect x="57.4930%" y="629" width="0.0165%" height="15" fill="rgb(209,217,16)" fg:x="14902909209" fg:w="4267889"/><text x="57.7430%" y="639.50"></text></g><g><title>array_hash_map.getAutoHashFn__struct_14487.hash (4,011,396 samples, 0.02%)</title><rect x="57.5095%" y="629" width="0.0155%" height="15" fill="rgb(219,88,35)" fg:x="14907177098" fg:w="4011396"/><text x="57.7595%" y="639.50"></text></g><g><title>compiler_rt.memcpy.memcpy (21,188,232 samples, 0.08%)</title><rect x="57.5249%" y="629" width="0.0817%" height="15" fill="rgb(220,193,23)" fg:x="14911188494" fg:w="21188232"/><text x="57.7749%" y="639.50"></text></g><g><title>debug.SafetyLock.unlock (4,202,230 samples, 0.02%)</title><rect x="57.6067%" y="629" width="0.0162%" height="15" fill="rgb(230,90,52)" fg:x="14932376726" fg:w="4202230"/><text x="57.8567%" y="639.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (4,202,230 samples, 0.02%)</title><rect x="57.6067%" y="613" width="0.0162%" height="15" fill="rgb(252,106,19)" fg:x="14932376726" fg:w="4202230"/><text x="57.8567%" y="623.50"></text></g><g><title>hash.wyhash.Wyhash.hash (8,397,189 samples, 0.03%)</title><rect x="57.6229%" y="629" width="0.0324%" height="15" fill="rgb(206,74,20)" fg:x="14936578956" fg:w="8397189"/><text x="57.8729%" y="639.50"></text></g><g><title>hash.wyhash.Wyhash.final2 (8,397,189 samples, 0.03%)</title><rect x="57.6229%" y="613" width="0.0324%" height="15" fill="rgb(230,138,44)" fg:x="14936578956" fg:w="8397189"/><text x="57.8729%" y="623.50"></text></g><g><title>hash_map.HashMapUnmanaged (33,493,613 samples, 0.13%)</title><rect x="57.6553%" y="629" width="0.1292%" height="15" fill="rgb(235,182,43)" fg:x="14944976145" fg:w="33493613"/><text x="57.9053%" y="639.50"></text></g><g><title>hash_map.HashMapUnmanaged (4,260,837 samples, 0.02%)</title><rect x="57.7681%" y="613" width="0.0164%" height="15" fill="rgb(242,16,51)" fg:x="14974208921" fg:w="4260837"/><text x="58.0181%" y="623.50"></text></g><g><title>mem.Allocator.alignedAlloc__anon_8944 (12,685,541 samples, 0.05%)</title><rect x="57.7845%" y="597" width="0.0489%" height="15" fill="rgb(248,9,4)" fg:x="14978469758" fg:w="12685541"/><text x="58.0345%" y="607.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (12,685,541 samples, 0.05%)</title><rect x="57.7845%" y="581" width="0.0489%" height="15" fill="rgb(210,31,22)" fg:x="14978469758" fg:w="12685541"/><text x="58.0345%" y="591.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_13385 (12,685,541 samples, 0.05%)</title><rect x="57.7845%" y="565" width="0.0489%" height="15" fill="rgb(239,54,39)" fg:x="14978469758" fg:w="12685541"/><text x="58.0345%" y="575.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (12,685,541 samples, 0.05%)</title><rect x="57.7845%" y="549" width="0.0489%" height="15" fill="rgb(230,99,41)" fg:x="14978469758" fg:w="12685541"/><text x="58.0345%" y="559.50"></text></g><g><title>compiler_rt.memset.memset (12,685,541 samples, 0.05%)</title><rect x="57.7845%" y="533" width="0.0489%" height="15" fill="rgb(253,106,12)" fg:x="14978469758" fg:w="12685541"/><text x="58.0345%" y="543.50"></text></g><g><title>[unknown] (12,685,541 samples, 0.05%)</title><rect x="57.7845%" y="517" width="0.0489%" height="15" fill="rgb(213,46,41)" fg:x="14978469758" fg:w="12685541"/><text x="58.0345%" y="527.50"></text></g><g><title>[unknown] (12,685,541 samples, 0.05%)</title><rect x="57.7845%" y="501" width="0.0489%" height="15" fill="rgb(215,133,35)" fg:x="14978469758" fg:w="12685541"/><text x="58.0345%" y="511.50"></text></g><g><title>[unknown] (12,685,541 samples, 0.05%)</title><rect x="57.7845%" y="485" width="0.0489%" height="15" fill="rgb(213,28,5)" fg:x="14978469758" fg:w="12685541"/><text x="58.0345%" y="495.50"></text></g><g><title>[unknown] (12,685,541 samples, 0.05%)</title><rect x="57.7845%" y="469" width="0.0489%" height="15" fill="rgb(215,77,49)" fg:x="14978469758" fg:w="12685541"/><text x="58.0345%" y="479.50"></text></g><g><title>[unknown] (4,148,187 samples, 0.02%)</title><rect x="57.8174%" y="453" width="0.0160%" height="15" fill="rgb(248,100,22)" fg:x="14987007112" fg:w="4148187"/><text x="58.0674%" y="463.50"></text></g><g><title>[unknown] (4,148,187 samples, 0.02%)</title><rect x="57.8174%" y="437" width="0.0160%" height="15" fill="rgb(208,67,9)" fg:x="14987007112" fg:w="4148187"/><text x="58.0674%" y="447.50"></text></g><g><title>[unknown] (4,148,187 samples, 0.02%)</title><rect x="57.8174%" y="421" width="0.0160%" height="15" fill="rgb(219,133,21)" fg:x="14987007112" fg:w="4148187"/><text x="58.0674%" y="431.50"></text></g><g><title>[unknown] (4,148,187 samples, 0.02%)</title><rect x="57.8174%" y="405" width="0.0160%" height="15" fill="rgb(246,46,29)" fg:x="14987007112" fg:w="4148187"/><text x="58.0674%" y="415.50"></text></g><g><title>[unknown] (4,148,187 samples, 0.02%)</title><rect x="57.8174%" y="389" width="0.0160%" height="15" fill="rgb(246,185,52)" fg:x="14987007112" fg:w="4148187"/><text x="58.0674%" y="399.50"></text></g><g><title>[unknown] (4,148,187 samples, 0.02%)</title><rect x="57.8174%" y="373" width="0.0160%" height="15" fill="rgb(252,136,11)" fg:x="14987007112" fg:w="4148187"/><text x="58.0674%" y="383.50"></text></g><g><title>[unknown] (4,148,187 samples, 0.02%)</title><rect x="57.8174%" y="357" width="0.0160%" height="15" fill="rgb(219,138,53)" fg:x="14987007112" fg:w="4148187"/><text x="58.0674%" y="367.50"></text></g><g><title>[unknown] (4,148,187 samples, 0.02%)</title><rect x="57.8174%" y="341" width="0.0160%" height="15" fill="rgb(211,51,23)" fg:x="14987007112" fg:w="4148187"/><text x="58.0674%" y="351.50"></text></g><g><title>[unknown] (4,148,187 samples, 0.02%)</title><rect x="57.8174%" y="325" width="0.0160%" height="15" fill="rgb(247,221,28)" fg:x="14987007112" fg:w="4148187"/><text x="58.0674%" y="335.50"></text></g><g><title>multi_array_list.MultiArrayList (16,957,111 samples, 0.07%)</title><rect x="57.7845%" y="629" width="0.0654%" height="15" fill="rgb(251,222,45)" fg:x="14978469758" fg:w="16957111"/><text x="58.0345%" y="639.50"></text></g><g><title>multi_array_list.MultiArrayList (16,957,111 samples, 0.07%)</title><rect x="57.7845%" y="613" width="0.0654%" height="15" fill="rgb(217,162,53)" fg:x="14978469758" fg:w="16957111"/><text x="58.0345%" y="623.50"></text></g><g><title>mem.Allocator.free__anon_8945 (4,271,570 samples, 0.02%)</title><rect x="57.8334%" y="597" width="0.0165%" height="15" fill="rgb(229,93,14)" fg:x="14991155299" fg:w="4271570"/><text x="58.0834%" y="607.50"></text></g><g><title>compiler_rt.memset.memset (4,271,570 samples, 0.02%)</title><rect x="57.8334%" y="581" width="0.0165%" height="15" fill="rgb(209,67,49)" fg:x="14991155299" fg:w="4271570"/><text x="58.0834%" y="591.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (209,218,995 samples, 0.81%)</title><rect x="57.0592%" y="645" width="0.8071%" height="15" fill="rgb(213,87,29)" fg:x="14790471595" fg:w="209218995"/><text x="57.3092%" y="655.50"></text></g><g><title>navigation.navigateBetween (4,263,721 samples, 0.02%)</title><rect x="57.8499%" y="629" width="0.0164%" height="15" fill="rgb(205,151,52)" fg:x="14995426869" fg:w="4263721"/><text x="58.0999%" y="639.50"></text></g><g><title>compiler_rt.memcpy.memcpy (8,259,467 samples, 0.03%)</title><rect x="57.8664%" y="645" width="0.0319%" height="15" fill="rgb(253,215,39)" fg:x="14999690590" fg:w="8259467"/><text x="58.1164%" y="655.50"></text></g><g><title>hash.wyhash.Wyhash.hash (4,174,919 samples, 0.02%)</title><rect x="57.8982%" y="645" width="0.0161%" height="15" fill="rgb(221,220,41)" fg:x="15007950057" fg:w="4174919"/><text x="58.1482%" y="655.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (4,174,919 samples, 0.02%)</title><rect x="57.8982%" y="629" width="0.0161%" height="15" fill="rgb(218,133,21)" fg:x="15007950057" fg:w="4174919"/><text x="58.1482%" y="639.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (225,693,730 samples, 0.87%)</title><rect x="57.0592%" y="661" width="0.8707%" height="15" fill="rgb(221,193,43)" fg:x="14790471595" fg:w="225693730"/><text x="57.3092%" y="671.50"></text></g><g><title>hash.wyhash.Wyhash.init (4,040,349 samples, 0.02%)</title><rect x="57.9143%" y="645" width="0.0156%" height="15" fill="rgb(240,128,52)" fg:x="15012124976" fg:w="4040349"/><text x="58.1643%" y="655.50"></text></g><g><title>hash.wyhash.Wyhash.mix (4,040,349 samples, 0.02%)</title><rect x="57.9143%" y="629" width="0.0156%" height="15" fill="rgb(253,114,12)" fg:x="15012124976" fg:w="4040349"/><text x="58.1643%" y="639.50"></text></g><g><title>hash.wyhash.Wyhash.mum (4,040,349 samples, 0.02%)</title><rect x="57.9143%" y="613" width="0.0156%" height="15" fill="rgb(215,223,47)" fg:x="15012124976" fg:w="4040349"/><text x="58.1643%" y="623.50"></text></g><g><title>array_hash_map.IndexHeader.length (4,191,699 samples, 0.02%)</title><rect x="57.9299%" y="661" width="0.0162%" height="15" fill="rgb(248,225,23)" fg:x="15016165325" fg:w="4191699"/><text x="58.1799%" y="671.50"></text></g><g><title>compiler_rt.memcpy.memcpy (8,526,532 samples, 0.03%)</title><rect x="57.9461%" y="661" width="0.0329%" height="15" fill="rgb(250,108,0)" fg:x="15020357024" fg:w="8526532"/><text x="58.1961%" y="671.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (251,077,169 samples, 0.97%)</title><rect x="57.0266%" y="677" width="0.9686%" height="15" fill="rgb(228,208,7)" fg:x="14782004137" fg:w="251077169"/><text x="57.2766%" y="687.50"></text></g><g><title>multi_array_list.MultiArrayList (4,197,750 samples, 0.02%)</title><rect x="57.9790%" y="661" width="0.0162%" height="15" fill="rgb(244,45,10)" fg:x="15028883556" fg:w="4197750"/><text x="58.2290%" y="671.50"></text></g><g><title>compiler_rt.memcpy.memcpy (8,305,448 samples, 0.03%)</title><rect x="57.9952%" y="677" width="0.0320%" height="15" fill="rgb(207,125,25)" fg:x="15033081306" fg:w="8305448"/><text x="58.2452%" y="687.50"></text></g><g><title>hash_map.HashMapUnmanaged (12,721,702 samples, 0.05%)</title><rect x="58.0272%" y="677" width="0.0491%" height="15" fill="rgb(210,195,18)" fg:x="15041386754" fg:w="12721702"/><text x="58.2772%" y="687.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (276,369,097 samples, 1.07%)</title><rect x="57.0266%" y="693" width="1.0662%" height="15" fill="rgb(249,80,12)" fg:x="14782004137" fg:w="276369097"/><text x="57.2766%" y="703.50"></text></g><g><title>navigation.navigateBetween (4,264,778 samples, 0.02%)</title><rect x="58.0763%" y="677" width="0.0165%" height="15" fill="rgb(221,65,9)" fg:x="15054108456" fg:w="4264778"/><text x="58.3263%" y="687.50"></text></g><g><title>array_hash_map.ArrayHashMap (280,628,836 samples, 1.08%)</title><rect x="57.0266%" y="709" width="1.0826%" height="15" fill="rgb(235,49,36)" fg:x="14782004137" fg:w="280628836"/><text x="57.2766%" y="719.50"></text></g><g><title>multi_array_list.MultiArrayList (4,259,739 samples, 0.02%)</title><rect x="58.0927%" y="693" width="0.0164%" height="15" fill="rgb(225,32,20)" fg:x="15058373234" fg:w="4259739"/><text x="58.3427%" y="703.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (3,083,330,107 samples, 11.89%)</title><rect x="58.1092%" y="709" width="11.8950%" height="15" fill="rgb(215,141,46)" fg:x="15062632973" fg:w="3083330107"/><text x="58.3592%" y="719.50">array_hash_map.Arr..</text></g><g><title>[unknown] (37,481,864 samples, 0.14%)</title><rect x="69.8596%" y="693" width="0.1446%" height="15" fill="rgb(250,160,47)" fg:x="18108481216" fg:w="37481864"/><text x="70.1096%" y="703.50"></text></g><g><title>[unknown] (37,481,864 samples, 0.14%)</title><rect x="69.8596%" y="677" width="0.1446%" height="15" fill="rgb(216,222,40)" fg:x="18108481216" fg:w="37481864"/><text x="70.1096%" y="687.50"></text></g><g><title>[unknown] (37,481,864 samples, 0.14%)</title><rect x="69.8596%" y="661" width="0.1446%" height="15" fill="rgb(234,217,39)" fg:x="18108481216" fg:w="37481864"/><text x="70.1096%" y="671.50"></text></g><g><title>[unknown] (37,481,864 samples, 0.14%)</title><rect x="69.8596%" y="645" width="0.1446%" height="15" fill="rgb(207,178,40)" fg:x="18108481216" fg:w="37481864"/><text x="70.1096%" y="655.50"></text></g><g><title>[unknown] (37,481,864 samples, 0.14%)</title><rect x="69.8596%" y="629" width="0.1446%" height="15" fill="rgb(221,136,13)" fg:x="18108481216" fg:w="37481864"/><text x="70.1096%" y="639.50"></text></g><g><title>[unknown] (37,481,864 samples, 0.14%)</title><rect x="69.8596%" y="613" width="0.1446%" height="15" fill="rgb(249,199,10)" fg:x="18108481216" fg:w="37481864"/><text x="70.1096%" y="623.50"></text></g><g><title>[unknown] (37,481,864 samples, 0.14%)</title><rect x="69.8596%" y="597" width="0.1446%" height="15" fill="rgb(249,222,13)" fg:x="18108481216" fg:w="37481864"/><text x="70.1096%" y="607.50"></text></g><g><title>[unknown] (21,077,040 samples, 0.08%)</title><rect x="69.9229%" y="581" width="0.0813%" height="15" fill="rgb(244,185,38)" fg:x="18124886040" fg:w="21077040"/><text x="70.1729%" y="591.50"></text></g><g><title>[unknown] (21,077,040 samples, 0.08%)</title><rect x="69.9229%" y="565" width="0.0813%" height="15" fill="rgb(236,202,9)" fg:x="18124886040" fg:w="21077040"/><text x="70.1729%" y="575.50"></text></g><g><title>[unknown] (21,077,040 samples, 0.08%)</title><rect x="69.9229%" y="549" width="0.0813%" height="15" fill="rgb(250,229,37)" fg:x="18124886040" fg:w="21077040"/><text x="70.1729%" y="559.50"></text></g><g><title>[unknown] (16,892,718 samples, 0.07%)</title><rect x="69.9390%" y="533" width="0.0652%" height="15" fill="rgb(206,174,23)" fg:x="18129070362" fg:w="16892718"/><text x="70.1890%" y="543.50"></text></g><g><title>[unknown] (8,429,895 samples, 0.03%)</title><rect x="69.9716%" y="517" width="0.0325%" height="15" fill="rgb(211,33,43)" fg:x="18137533185" fg:w="8429895"/><text x="70.2216%" y="527.50"></text></g><g><title>[unknown] (4,181,938 samples, 0.02%)</title><rect x="69.9880%" y="501" width="0.0161%" height="15" fill="rgb(245,58,50)" fg:x="18141781142" fg:w="4181938"/><text x="70.2380%" y="511.50"></text></g><g><title>array_hash_map.IndexHeader.mask (4,189,437 samples, 0.02%)</title><rect x="70.0042%" y="709" width="0.0162%" height="15" fill="rgb(244,68,36)" fg:x="18145963080" fg:w="4189437"/><text x="70.2542%" y="719.50"></text></g><g><title>compiler_rt.memcpy.memcpy (3,454,575,409 samples, 13.33%)</title><rect x="70.0203%" y="709" width="13.3272%" height="15" fill="rgb(232,229,15)" fg:x="18150152517" fg:w="3454575409"/><text x="70.2703%" y="719.50">compiler_rt.memcpy.m..</text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="693" width="0.0489%" height="15" fill="rgb(254,30,23)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="703.50"></text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="677" width="0.0489%" height="15" fill="rgb(235,160,14)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="687.50"></text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="661" width="0.0489%" height="15" fill="rgb(212,155,44)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="671.50"></text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="645" width="0.0489%" height="15" fill="rgb(226,2,50)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="655.50"></text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="629" width="0.0489%" height="15" fill="rgb(234,177,6)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="639.50"></text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="613" width="0.0489%" height="15" fill="rgb(217,24,9)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="623.50"></text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="597" width="0.0489%" height="15" fill="rgb(220,13,46)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="607.50"></text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="581" width="0.0489%" height="15" fill="rgb(239,221,27)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="591.50"></text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="565" width="0.0489%" height="15" fill="rgb(222,198,25)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="575.50"></text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="549" width="0.0489%" height="15" fill="rgb(211,99,13)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="559.50"></text></g><g><title>[unknown] (12,686,922 samples, 0.05%)</title><rect x="83.2986%" y="533" width="0.0489%" height="15" fill="rgb(232,111,31)" fg:x="21592041004" fg:w="12686922"/><text x="83.5486%" y="543.50"></text></g><g><title>[unknown] (4,233,585 samples, 0.02%)</title><rect x="83.3312%" y="517" width="0.0163%" height="15" fill="rgb(245,82,37)" fg:x="21600494341" fg:w="4233585"/><text x="83.5812%" y="527.50"></text></g><g><title>hash.wyhash.Wyhash.final2 (4,199,270 samples, 0.02%)</title><rect x="83.3475%" y="693" width="0.0162%" height="15" fill="rgb(227,149,46)" fg:x="21604727926" fg:w="4199270"/><text x="83.5975%" y="703.50"></text></g><g><title>hash.wyhash.Wyhash.mix (4,199,270 samples, 0.02%)</title><rect x="83.3475%" y="677" width="0.0162%" height="15" fill="rgb(218,36,50)" fg:x="21604727926" fg:w="4199270"/><text x="83.5975%" y="687.50"></text></g><g><title>hash.wyhash.Wyhash.mum (4,199,270 samples, 0.02%)</title><rect x="83.3475%" y="661" width="0.0162%" height="15" fill="rgb(226,80,48)" fg:x="21604727926" fg:w="4199270"/><text x="83.5975%" y="671.50"></text></g><g><title>hash.wyhash.Wyhash.hash (16,810,716 samples, 0.06%)</title><rect x="83.3475%" y="709" width="0.0649%" height="15" fill="rgb(238,224,15)" fg:x="21604727926" fg:w="16810716"/><text x="83.5975%" y="719.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (12,611,446 samples, 0.05%)</title><rect x="83.3637%" y="693" width="0.0487%" height="15" fill="rgb(241,136,10)" fg:x="21608927196" fg:w="12611446"/><text x="83.6137%" y="703.50"></text></g><g><title>hash.wyhash.Wyhash.read (4,082,150 samples, 0.02%)</title><rect x="83.3966%" y="677" width="0.0157%" height="15" fill="rgb(208,32,45)" fg:x="21617456492" fg:w="4082150"/><text x="83.6466%" y="687.50"></text></g><g><title>debug.assert (4,190,576 samples, 0.02%)</title><rect x="83.4124%" y="693" width="0.0162%" height="15" fill="rgb(207,135,9)" fg:x="21621538642" fg:w="4190576"/><text x="83.6624%" y="703.50"></text></g><g><title>hash_map.HashMap (4,196,168 samples, 0.02%)</title><rect x="83.4285%" y="693" width="0.0162%" height="15" fill="rgb(206,86,44)" fg:x="21625729218" fg:w="4196168"/><text x="83.6785%" y="703.50"></text></g><g><title>array_hash_map.IndexHeader.length (4,263,046 samples, 0.02%)</title><rect x="83.4447%" y="677" width="0.0164%" height="15" fill="rgb(245,177,15)" fg:x="21629925386" fg:w="4263046"/><text x="83.6947%" y="687.50"></text></g><g><title>compiler_rt.memcpy.memcpy (4,037,518 samples, 0.02%)</title><rect x="83.4612%" y="677" width="0.0156%" height="15" fill="rgb(206,64,50)" fg:x="21634188432" fg:w="4037518"/><text x="83.7112%" y="687.50"></text></g><g><title>hash.wyhash.Wyhash.hash (12,558,779 samples, 0.05%)</title><rect x="83.4767%" y="677" width="0.0484%" height="15" fill="rgb(234,36,40)" fg:x="21638225950" fg:w="12558779"/><text x="83.7267%" y="687.50"></text></g><g><title>hash.wyhash.Wyhash.smallKey (12,558,779 samples, 0.05%)</title><rect x="83.4767%" y="661" width="0.0484%" height="15" fill="rgb(213,64,8)" fg:x="21638225950" fg:w="12558779"/><text x="83.7267%" y="671.50"></text></g><g><title>hash.wyhash.Wyhash.read (4,179,011 samples, 0.02%)</title><rect x="83.5091%" y="645" width="0.0161%" height="15" fill="rgb(210,75,36)" fg:x="21646605718" fg:w="4179011"/><text x="83.7591%" y="655.50"></text></g><g><title>hash_map.HashMap (4,191,002 samples, 0.02%)</title><rect x="83.5252%" y="677" width="0.0162%" height="15" fill="rgb(229,88,21)" fg:x="21650784729" fg:w="4191002"/><text x="83.7752%" y="687.50"></text></g><g><title>compiler_rt.memcpy.memcpy (8,444,278 samples, 0.03%)</title><rect x="83.5740%" y="661" width="0.0326%" height="15" fill="rgb(252,204,47)" fg:x="21663433583" fg:w="8444278"/><text x="83.8240%" y="671.50"></text></g><g><title>[unknown] (4,175,383 samples, 0.02%)</title><rect x="83.6226%" y="645" width="0.0161%" height="15" fill="rgb(208,77,27)" fg:x="21676046627" fg:w="4175383"/><text x="83.8726%" y="655.50"></text></g><g><title>[unknown] (4,175,383 samples, 0.02%)</title><rect x="83.6226%" y="629" width="0.0161%" height="15" fill="rgb(221,76,26)" fg:x="21676046627" fg:w="4175383"/><text x="83.8726%" y="639.50"></text></g><g><title>[unknown] (4,175,383 samples, 0.02%)</title><rect x="83.6226%" y="613" width="0.0161%" height="15" fill="rgb(225,139,18)" fg:x="21676046627" fg:w="4175383"/><text x="83.8726%" y="623.50"></text></g><g><title>[unknown] (4,175,383 samples, 0.02%)</title><rect x="83.6226%" y="597" width="0.0161%" height="15" fill="rgb(230,137,11)" fg:x="21676046627" fg:w="4175383"/><text x="83.8726%" y="607.50"></text></g><g><title>[unknown] (4,175,383 samples, 0.02%)</title><rect x="83.6226%" y="581" width="0.0161%" height="15" fill="rgb(212,28,1)" fg:x="21676046627" fg:w="4175383"/><text x="83.8726%" y="591.50"></text></g><g><title>[unknown] (4,175,383 samples, 0.02%)</title><rect x="83.6226%" y="565" width="0.0161%" height="15" fill="rgb(248,164,17)" fg:x="21676046627" fg:w="4175383"/><text x="83.8726%" y="575.50"></text></g><g><title>[unknown] (4,175,383 samples, 0.02%)</title><rect x="83.6226%" y="549" width="0.0161%" height="15" fill="rgb(222,171,42)" fg:x="21676046627" fg:w="4175383"/><text x="83.8726%" y="559.50"></text></g><g><title>[unknown] (4,175,383 samples, 0.02%)</title><rect x="83.6226%" y="533" width="0.0161%" height="15" fill="rgb(243,84,45)" fg:x="21676046627" fg:w="4175383"/><text x="83.8726%" y="543.50"></text></g><g><title>[unknown] (4,175,383 samples, 0.02%)</title><rect x="83.6226%" y="517" width="0.0161%" height="15" fill="rgb(252,49,23)" fg:x="21676046627" fg:w="4175383"/><text x="83.8726%" y="527.50"></text></g><g><title>[unknown] (4,175,383 samples, 0.02%)</title><rect x="83.6226%" y="501" width="0.0161%" height="15" fill="rgb(215,19,7)" fg:x="21676046627" fg:w="4175383"/><text x="83.8726%" y="511.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (21,094,143 samples, 0.08%)</title><rect x="83.6388%" y="629" width="0.0814%" height="15" fill="rgb(238,81,41)" fg:x="21680222010" fg:w="21094143"/><text x="83.8888%" y="639.50"></text></g><g><title>array_hash_map.IndexHeader.capacity (4,194,727 samples, 0.02%)</title><rect x="83.7201%" y="613" width="0.0162%" height="15" fill="rgb(210,199,37)" fg:x="21701316153" fg:w="4194727"/><text x="83.9701%" y="623.50"></text></g><g><title>array_hash_map.capacityIndexType (4,262,424 samples, 0.02%)</title><rect x="83.7363%" y="613" width="0.0164%" height="15" fill="rgb(244,192,49)" fg:x="21705510880" fg:w="4262424"/><text x="83.9863%" y="623.50"></text></g><g><title>hash.wyhash.Wyhash.hash (12,718,526 samples, 0.05%)</title><rect x="83.7201%" y="629" width="0.0491%" height="15" fill="rgb(226,211,11)" fg:x="21701316153" fg:w="12718526"/><text x="83.9701%" y="639.50"></text></g><g><title>compiler_rt.memset.memset (4,261,375 samples, 0.02%)</title><rect x="83.7528%" y="613" width="0.0164%" height="15" fill="rgb(236,162,54)" fg:x="21709773304" fg:w="4261375"/><text x="84.0028%" y="623.50"></text></g><g><title>multi_array_list.MultiArrayList (4,269,753 samples, 0.02%)</title><rect x="83.7692%" y="629" width="0.0165%" height="15" fill="rgb(220,229,9)" fg:x="21714034679" fg:w="4269753"/><text x="84.0192%" y="639.50"></text></g><g><title>hash_map.HashMapUnmanaged (71,797,050 samples, 0.28%)</title><rect x="83.5414%" y="677" width="0.2770%" height="15" fill="rgb(250,87,22)" fg:x="21654975731" fg:w="71797050"/><text x="83.7914%" y="687.50"></text></g><g><title>hash_map.HashMapUnmanaged (54,894,920 samples, 0.21%)</title><rect x="83.6066%" y="661" width="0.2118%" height="15" fill="rgb(239,43,17)" fg:x="21671877861" fg:w="54894920"/><text x="83.8566%" y="671.50"></text></g><g><title>hash_map.getAutoHashFn__struct_13347.hash (46,550,771 samples, 0.18%)</title><rect x="83.6388%" y="645" width="0.1796%" height="15" fill="rgb(231,177,25)" fg:x="21680222010" fg:w="46550771"/><text x="83.8888%" y="655.50"></text></g><g><title>navigation.navigateBetween (8,468,349 samples, 0.03%)</title><rect x="83.7857%" y="629" width="0.0327%" height="15" fill="rgb(219,179,1)" fg:x="21718304432" fg:w="8468349"/><text x="84.0357%" y="639.50"></text></g><g><title>hash_map.HashMap (109,426,928 samples, 0.42%)</title><rect x="83.4124%" y="709" width="0.4222%" height="15" fill="rgb(238,219,53)" fg:x="21621538642" fg:w="109426928"/><text x="83.6624%" y="719.50"></text></g><g><title>hash_map.HashMapUnmanaged (101,040,184 samples, 0.39%)</title><rect x="83.4447%" y="693" width="0.3898%" height="15" fill="rgb(232,167,36)" fg:x="21629925386" fg:w="101040184"/><text x="83.6947%" y="703.50"></text></g><g><title>multi_array_list.MultiArrayList (4,192,789 samples, 0.02%)</title><rect x="83.8183%" y="677" width="0.0162%" height="15" fill="rgb(244,19,51)" fg:x="21726772781" fg:w="4192789"/><text x="84.0683%" y="687.50"></text></g><g><title>multi_array_list.MultiArrayList (8,376,752 samples, 0.03%)</title><rect x="83.8345%" y="709" width="0.0323%" height="15" fill="rgb(224,6,22)" fg:x="21730965570" fg:w="8376752"/><text x="84.0845%" y="719.50"></text></g><g><title>navigation.navigateBetween (11,765,850,551 samples, 45.39%)</title><rect x="50.8566%" y="725" width="45.3907%" height="15" fill="rgb(224,145,5)" fg:x="13182661150" fg:w="11765850551"/><text x="51.1066%" y="735.50">navigation.navigateBetween</text></g><g><title>navigation.navigateBetween (3,209,169,379 samples, 12.38%)</title><rect x="83.8668%" y="709" width="12.3805%" height="15" fill="rgb(234,130,49)" fg:x="21739342322" fg:w="3209169379"/><text x="84.1168%" y="719.50">navigation.navigat..</text></g><g><title>httpz.ServerCtx (16,162,519,856 samples, 62.35%)</title><rect x="33.9180%" y="789" width="62.3524%" height="15" fill="rgb(254,6,2)" fg:x="8791984463" fg:w="16162519856"/><text x="34.1680%" y="799.50">httpz.ServerCtx</text></g><g><title>httpz.ServerCtx (16,162,519,856 samples, 62.35%)</title><rect x="33.9180%" y="773" width="62.3524%" height="15" fill="rgb(208,96,46)" fg:x="8791984463" fg:w="16162519856"/><text x="34.1680%" y="783.50">httpz.ServerCtx</text></g><g><title>main.queryNavigation (16,162,519,856 samples, 62.35%)</title><rect x="33.9180%" y="757" width="62.3524%" height="15" fill="rgb(239,3,39)" fg:x="8791984463" fg:w="16162519856"/><text x="34.1680%" y="767.50">main.queryNavigation</text></g><g><title>navigation.findPath (16,161,768,092 samples, 62.35%)</title><rect x="33.9209%" y="741" width="62.3495%" height="15" fill="rgb(233,210,1)" fg:x="8792736227" fg:w="16161768092"/><text x="34.1709%" y="751.50">navigation.findPath</text></g><g><title>static_string_map.defaultEql (5,992,618 samples, 0.02%)</title><rect x="96.2473%" y="725" width="0.0231%" height="15" fill="rgb(244,137,37)" fg:x="24948511701" fg:w="5992618"/><text x="96.4973%" y="735.50"></text></g><g><title>httpz.ServerCtx (16,162,539,595 samples, 62.35%)</title><rect x="33.9180%" y="805" width="62.3524%" height="15" fill="rgb(240,136,2)" fg:x="8791984463" fg:w="16162539595"/><text x="34.1680%" y="815.50">httpz.ServerCtx</text></g><g><title>Thread.LinuxThreadImpl.spawn__anon_7601.Instance.entryFn (16,162,626,109 samples, 62.35%)</title><rect x="33.9178%" y="869" width="62.3528%" height="15" fill="rgb(239,18,37)" fg:x="8791918539" fg:w="16162626109"/><text x="34.1678%" y="879.50">Thread.LinuxThreadImpl.spawn__anon_7601.Instance.entryFn</text></g><g><title>Thread.callFn__anon_13057 (16,162,626,109 samples, 62.35%)</title><rect x="33.9178%" y="853" width="62.3528%" height="15" fill="rgb(218,185,22)" fg:x="8791918539" fg:w="16162626109"/><text x="34.1678%" y="863.50">Thread.callFn__anon_13057</text></g><g><title>thread_pool.ThreadPool (16,162,626,109 samples, 62.35%)</title><rect x="33.9178%" y="837" width="62.3528%" height="15" fill="rgb(225,218,4)" fg:x="8791918539" fg:w="16162626109"/><text x="34.1678%" y="847.50">thread_pool.ThreadPool</text></g><g><title>httpz.ServerCtx (16,162,560,185 samples, 62.35%)</title><rect x="33.9180%" y="821" width="62.3525%" height="15" fill="rgb(230,182,32)" fg:x="8791984463" fg:w="16162560185"/><text x="34.1680%" y="831.50">httpz.ServerCtx</text></g><g><title>worker.NonBlocking (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="821" width="0.0626%" height="15" fill="rgb(242,56,43)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="831.50"></text></g><g><title>worker.NonBlocking (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="805" width="0.0626%" height="15" fill="rgb(233,99,24)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="815.50"></text></g><g><title>worker.Manager.keepalive (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="789" width="0.0626%" height="15" fill="rgb(234,209,42)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="799.50"></text></g><g><title>worker.Conn.keepalive (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="773" width="0.0626%" height="15" fill="rgb(227,7,12)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="783.50"></text></g><g><title>heap.arena_allocator.ArenaAllocator.reset (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="757" width="0.0626%" height="15" fill="rgb(245,203,43)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="767.50"></text></g><g><title>mem.Allocator.rawFree (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="741" width="0.0626%" height="15" fill="rgb(238,205,33)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="751.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="725" width="0.0626%" height="15" fill="rgb(231,56,7)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="735.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="709" width="0.0626%" height="15" fill="rgb(244,186,29)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="719.50"></text></g><g><title>mem.Allocator.rawFree (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="693" width="0.0626%" height="15" fill="rgb(234,111,31)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="703.50"></text></g><g><title>heap.PageAllocator.free (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="677" width="0.0626%" height="15" fill="rgb(241,149,10)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="687.50"></text></g><g><title>posix.munmap (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="661" width="0.0626%" height="15" fill="rgb(249,206,44)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="671.50"></text></g><g><title>os.linux.munmap (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="645" width="0.0626%" height="15" fill="rgb(251,153,30)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="655.50"></text></g><g><title>os.linux.x86_64.syscall2 (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="629" width="0.0626%" height="15" fill="rgb(239,152,38)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="639.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="613" width="0.0626%" height="15" fill="rgb(249,139,47)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="623.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="597" width="0.0626%" height="15" fill="rgb(244,64,35)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="607.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="581" width="0.0626%" height="15" fill="rgb(216,46,15)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="591.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="565" width="0.0626%" height="15" fill="rgb(250,74,19)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="575.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="549" width="0.0626%" height="15" fill="rgb(249,42,33)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="559.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="533" width="0.0626%" height="15" fill="rgb(242,149,17)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="543.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="517" width="0.0626%" height="15" fill="rgb(244,29,21)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="527.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="501" width="0.0626%" height="15" fill="rgb(220,130,37)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="511.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="485" width="0.0626%" height="15" fill="rgb(211,67,2)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="495.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="469" width="0.0626%" height="15" fill="rgb(235,68,52)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="479.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="453" width="0.0626%" height="15" fill="rgb(246,142,3)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="463.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="437" width="0.0626%" height="15" fill="rgb(241,25,7)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="447.50"></text></g><g><title>[unknown] (16,222,532 samples, 0.06%)</title><rect x="96.2709%" y="421" width="0.0626%" height="15" fill="rgb(242,119,39)" fg:x="24954623894" fg:w="16222532"/><text x="96.5209%" y="431.50"></text></g><g><title>[unknown] (9,905,725 samples, 0.04%)</title><rect x="96.2952%" y="405" width="0.0382%" height="15" fill="rgb(241,98,45)" fg:x="24960940701" fg:w="9905725"/><text x="96.5452%" y="415.50"></text></g><g><title>[unknown] (9,905,725 samples, 0.04%)</title><rect x="96.2952%" y="389" width="0.0382%" height="15" fill="rgb(254,28,30)" fg:x="24960940701" fg:w="9905725"/><text x="96.5452%" y="399.50"></text></g><g><title>[unknown] (4,249,912 samples, 0.02%)</title><rect x="96.3171%" y="373" width="0.0164%" height="15" fill="rgb(241,142,54)" fg:x="24966596514" fg:w="4249912"/><text x="96.5671%" y="383.50"></text></g><g><title>c.clone (16,179,002,174 samples, 62.42%)</title><rect x="33.9178%" y="885" width="62.4159%" height="15" fill="rgb(222,85,15)" fg:x="8791918539" fg:w="16179002174"/><text x="34.1678%" y="895.50">c.clone</text></g><g><title>Thread.LinuxThreadImpl.spawn__anon_9127.Instance.entryFn (16,376,065 samples, 0.06%)</title><rect x="96.2706%" y="869" width="0.0632%" height="15" fill="rgb(210,85,47)" fg:x="24954544648" fg:w="16376065"/><text x="96.5206%" y="879.50"></text></g><g><title>Thread.callFn__anon_13601 (16,376,065 samples, 0.06%)</title><rect x="96.2706%" y="853" width="0.0632%" height="15" fill="rgb(224,206,25)" fg:x="24954544648" fg:w="16376065"/><text x="96.5206%" y="863.50"></text></g><g><title>worker.NonBlocking (16,376,065 samples, 0.06%)</title><rect x="96.2706%" y="837" width="0.0632%" height="15" fill="rgb(243,201,19)" fg:x="24954544648" fg:w="16376065"/><text x="96.5206%" y="847.50"></text></g><g><title>compiler_rt.memcpy.memcpy (160,368,697 samples, 0.62%)</title><rect x="96.3337%" y="885" width="0.6187%" height="15" fill="rgb(236,59,4)" fg:x="24970920713" fg:w="160368697"/><text x="96.5837%" y="895.50"></text></g><g><title>compiler_rt.memset.memset (8,447,160 samples, 0.03%)</title><rect x="96.9524%" y="885" width="0.0326%" height="15" fill="rgb(254,179,45)" fg:x="25131289410" fg:w="8447160"/><text x="97.2024%" y="895.50"></text></g><g><title>crypto.sha2.Sha2x32 (4,190,732 samples, 0.02%)</title><rect x="96.9862%" y="885" width="0.0162%" height="15" fill="rgb(226,14,10)" fg:x="25140036045" fg:w="4190732"/><text x="97.2362%" y="895.50"></text></g><g><title>math.log2_int__anon_12103 (3,351,459 samples, 0.01%)</title><rect x="97.0551%" y="805" width="0.0129%" height="15" fill="rgb(244,27,41)" fg:x="25157917127" fg:w="3351459"/><text x="97.3051%" y="815.50"></text></g><g><title>compiler_rt.memset.memset (16,045,260 samples, 0.06%)</title><rect x="97.0751%" y="741" width="0.0619%" height="15" fill="rgb(235,35,32)" fg:x="25163080988" fg:w="16045260"/><text x="97.3251%" y="751.50"></text></g><g><title>[unknown] (16,045,260 samples, 0.06%)</title><rect x="97.0751%" y="725" width="0.0619%" height="15" fill="rgb(218,68,31)" fg:x="25163080988" fg:w="16045260"/><text x="97.3251%" y="735.50"></text></g><g><title>[unknown] (16,045,260 samples, 0.06%)</title><rect x="97.0751%" y="709" width="0.0619%" height="15" fill="rgb(207,120,37)" fg:x="25163080988" fg:w="16045260"/><text x="97.3251%" y="719.50"></text></g><g><title>[unknown] (16,045,260 samples, 0.06%)</title><rect x="97.0751%" y="693" width="0.0619%" height="15" fill="rgb(227,98,0)" fg:x="25163080988" fg:w="16045260"/><text x="97.3251%" y="703.50"></text></g><g><title>[unknown] (16,045,260 samples, 0.06%)</title><rect x="97.0751%" y="677" width="0.0619%" height="15" fill="rgb(207,7,3)" fg:x="25163080988" fg:w="16045260"/><text x="97.3251%" y="687.50"></text></g><g><title>[unknown] (8,507,393 samples, 0.03%)</title><rect x="97.1041%" y="661" width="0.0328%" height="15" fill="rgb(206,98,19)" fg:x="25170618855" fg:w="8507393"/><text x="97.3541%" y="671.50"></text></g><g><title>[unknown] (8,507,393 samples, 0.03%)</title><rect x="97.1041%" y="645" width="0.0328%" height="15" fill="rgb(217,5,26)" fg:x="25170618855" fg:w="8507393"/><text x="97.3541%" y="655.50"></text></g><g><title>[unknown] (8,507,393 samples, 0.03%)</title><rect x="97.1041%" y="629" width="0.0328%" height="15" fill="rgb(235,190,38)" fg:x="25170618855" fg:w="8507393"/><text x="97.3541%" y="639.50"></text></g><g><title>[unknown] (8,507,393 samples, 0.03%)</title><rect x="97.1041%" y="613" width="0.0328%" height="15" fill="rgb(247,86,24)" fg:x="25170618855" fg:w="8507393"/><text x="97.3541%" y="623.50"></text></g><g><title>[unknown] (7,338,081 samples, 0.03%)</title><rect x="97.1086%" y="597" width="0.0283%" height="15" fill="rgb(205,101,16)" fg:x="25171788167" fg:w="7338081"/><text x="97.3586%" y="607.50"></text></g><g><title>[unknown] (6,052,519 samples, 0.02%)</title><rect x="97.1136%" y="581" width="0.0233%" height="15" fill="rgb(246,168,33)" fg:x="25173073729" fg:w="6052519"/><text x="97.3636%" y="591.50"></text></g><g><title>[unknown] (6,052,519 samples, 0.02%)</title><rect x="97.1136%" y="565" width="0.0233%" height="15" fill="rgb(231,114,1)" fg:x="25173073729" fg:w="6052519"/><text x="97.3636%" y="575.50"></text></g><g><title>[unknown] (4,719,575 samples, 0.02%)</title><rect x="97.1187%" y="549" width="0.0182%" height="15" fill="rgb(207,184,53)" fg:x="25174406673" fg:w="4719575"/><text x="97.3687%" y="559.50"></text></g><g><title>[unknown] (3,295,009 samples, 0.01%)</title><rect x="97.1242%" y="533" width="0.0127%" height="15" fill="rgb(224,95,51)" fg:x="25175831239" fg:w="3295009"/><text x="97.3742%" y="543.50"></text></g><g><title>heap.arena_allocator.ArenaAllocator.alloc (6,991,859 samples, 0.03%)</title><rect x="97.1370%" y="693" width="0.0270%" height="15" fill="rgb(212,188,45)" fg:x="25179126248" fg:w="6991859"/><text x="97.3870%" y="703.50"></text></g><g><title>mem.alignForward__anon_7113 (3,185,817 samples, 0.01%)</title><rect x="97.1516%" y="677" width="0.0123%" height="15" fill="rgb(223,154,38)" fg:x="25182932290" fg:w="3185817"/><text x="97.4016%" y="687.50"></text></g><g><title>mem.Allocator.alignedAlloc__anon_13331 (26,125,876 samples, 0.10%)</title><rect x="97.0681%" y="805" width="0.1008%" height="15" fill="rgb(251,22,52)" fg:x="25161268586" fg:w="26125876"/><text x="97.3181%" y="815.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (26,125,876 samples, 0.10%)</title><rect x="97.0681%" y="789" width="0.1008%" height="15" fill="rgb(229,209,22)" fg:x="25161268586" fg:w="26125876"/><text x="97.3181%" y="799.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_14263 (26,125,876 samples, 0.10%)</title><rect x="97.0681%" y="773" width="0.1008%" height="15" fill="rgb(234,138,34)" fg:x="25161268586" fg:w="26125876"/><text x="97.3181%" y="783.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (24,313,474 samples, 0.09%)</title><rect x="97.0751%" y="757" width="0.0938%" height="15" fill="rgb(212,95,11)" fg:x="25163080988" fg:w="24313474"/><text x="97.3251%" y="767.50"></text></g><g><title>mem.Allocator.rawAlloc (8,268,214 samples, 0.03%)</title><rect x="97.1370%" y="741" width="0.0319%" height="15" fill="rgb(240,179,47)" fg:x="25179126248" fg:w="8268214"/><text x="97.3870%" y="751.50"></text></g><g><title>httpz.FallbackAllocator.alloc (8,268,214 samples, 0.03%)</title><rect x="97.1370%" y="725" width="0.0319%" height="15" fill="rgb(240,163,11)" fg:x="25179126248" fg:w="8268214"/><text x="97.3870%" y="735.50"></text></g><g><title>mem.Allocator.rawAlloc (8,268,214 samples, 0.03%)</title><rect x="97.1370%" y="709" width="0.0319%" height="15" fill="rgb(236,37,12)" fg:x="25179126248" fg:w="8268214"/><text x="97.3870%" y="719.50"></text></g><g><title>compiler_rt.memset.memset (6,445,220 samples, 0.02%)</title><rect x="97.1689%" y="741" width="0.0249%" height="15" fill="rgb(232,164,16)" fg:x="25187394462" fg:w="6445220"/><text x="97.4189%" y="751.50"></text></g><g><title>[unknown] (6,445,220 samples, 0.02%)</title><rect x="97.1689%" y="725" width="0.0249%" height="15" fill="rgb(244,205,15)" fg:x="25187394462" fg:w="6445220"/><text x="97.4189%" y="735.50"></text></g><g><title>[unknown] (6,445,220 samples, 0.02%)</title><rect x="97.1689%" y="709" width="0.0249%" height="15" fill="rgb(223,117,47)" fg:x="25187394462" fg:w="6445220"/><text x="97.4189%" y="719.50"></text></g><g><title>[unknown] (6,445,220 samples, 0.02%)</title><rect x="97.1689%" y="693" width="0.0249%" height="15" fill="rgb(244,107,35)" fg:x="25187394462" fg:w="6445220"/><text x="97.4189%" y="703.50"></text></g><g><title>[unknown] (6,445,220 samples, 0.02%)</title><rect x="97.1689%" y="677" width="0.0249%" height="15" fill="rgb(205,140,8)" fg:x="25187394462" fg:w="6445220"/><text x="97.4189%" y="687.50"></text></g><g><title>[unknown] (4,253,105 samples, 0.02%)</title><rect x="97.1773%" y="661" width="0.0164%" height="15" fill="rgb(228,84,46)" fg:x="25189586577" fg:w="4253105"/><text x="97.4273%" y="671.50"></text></g><g><title>mem.Allocator.alignedAlloc__anon_13333 (8,018,278 samples, 0.03%)</title><rect x="97.1689%" y="805" width="0.0309%" height="15" fill="rgb(254,188,9)" fg:x="25187394462" fg:w="8018278"/><text x="97.4189%" y="815.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (8,018,278 samples, 0.03%)</title><rect x="97.1689%" y="789" width="0.0309%" height="15" fill="rgb(206,112,54)" fg:x="25187394462" fg:w="8018278"/><text x="97.4189%" y="799.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_9126 (8,018,278 samples, 0.03%)</title><rect x="97.1689%" y="773" width="0.0309%" height="15" fill="rgb(216,84,49)" fg:x="25187394462" fg:w="8018278"/><text x="97.4189%" y="783.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (8,018,278 samples, 0.03%)</title><rect x="97.1689%" y="757" width="0.0309%" height="15" fill="rgb(214,194,35)" fg:x="25187394462" fg:w="8018278"/><text x="97.4189%" y="767.50"></text></g><g><title>mem.Allocator.resize__anon_13330 (6,852,790 samples, 0.03%)</title><rect x="97.2113%" y="805" width="0.0264%" height="15" fill="rgb(249,28,3)" fg:x="25198404487" fg:w="6852790"/><text x="97.4613%" y="815.50"></text></g><g><title>array_list.ArrayListAligned (49,186,491 samples, 0.19%)</title><rect x="97.0551%" y="821" width="0.1898%" height="15" fill="rgb(222,56,52)" fg:x="25157917127" fg:w="49186491"/><text x="97.3051%" y="831.50"></text></g><g><title>array_list.ArrayListAligned (50,772,854 samples, 0.20%)</title><rect x="97.0551%" y="837" width="0.1959%" height="15" fill="rgb(245,217,50)" fg:x="25157917127" fg:w="50772854"/><text x="97.3051%" y="847.50"></text></g><g><title>array_list.ArrayListAligned (52,685,168 samples, 0.20%)</title><rect x="97.0551%" y="853" width="0.2033%" height="15" fill="rgb(213,201,24)" fg:x="25157917127" fg:w="52685168"/><text x="97.3051%" y="863.50"></text></g><g><title>compiler_rt.memcpy.memcpy (9,219,295 samples, 0.04%)</title><rect x="97.2584%" y="853" width="0.0356%" height="15" fill="rgb(248,116,28)" fg:x="25210602295" fg:w="9219295"/><text x="97.5084%" y="863.50"></text></g><g><title>[unknown] (9,219,295 samples, 0.04%)</title><rect x="97.2584%" y="837" width="0.0356%" height="15" fill="rgb(219,72,43)" fg:x="25210602295" fg:w="9219295"/><text x="97.5084%" y="847.50"></text></g><g><title>[unknown] (9,219,295 samples, 0.04%)</title><rect x="97.2584%" y="821" width="0.0356%" height="15" fill="rgb(209,138,14)" fg:x="25210602295" fg:w="9219295"/><text x="97.5084%" y="831.50"></text></g><g><title>[unknown] (9,219,295 samples, 0.04%)</title><rect x="97.2584%" y="805" width="0.0356%" height="15" fill="rgb(222,18,33)" fg:x="25210602295" fg:w="9219295"/><text x="97.5084%" y="815.50"></text></g><g><title>[unknown] (9,219,295 samples, 0.04%)</title><rect x="97.2584%" y="789" width="0.0356%" height="15" fill="rgb(213,199,7)" fg:x="25210602295" fg:w="9219295"/><text x="97.5084%" y="799.50"></text></g><g><title>[unknown] (6,969,896 samples, 0.03%)</title><rect x="97.2671%" y="773" width="0.0269%" height="15" fill="rgb(250,110,10)" fg:x="25212851694" fg:w="6969896"/><text x="97.5171%" y="783.50"></text></g><g><title>[unknown] (6,969,896 samples, 0.03%)</title><rect x="97.2671%" y="757" width="0.0269%" height="15" fill="rgb(248,123,6)" fg:x="25212851694" fg:w="6969896"/><text x="97.5171%" y="767.50"></text></g><g><title>[unknown] (6,969,896 samples, 0.03%)</title><rect x="97.2671%" y="741" width="0.0269%" height="15" fill="rgb(206,91,31)" fg:x="25212851694" fg:w="6969896"/><text x="97.5171%" y="751.50"></text></g><g><title>[unknown] (6,969,896 samples, 0.03%)</title><rect x="97.2671%" y="725" width="0.0269%" height="15" fill="rgb(211,154,13)" fg:x="25212851694" fg:w="6969896"/><text x="97.5171%" y="735.50"></text></g><g><title>[unknown] (4,757,307 samples, 0.02%)</title><rect x="97.2756%" y="709" width="0.0184%" height="15" fill="rgb(225,148,7)" fg:x="25215064283" fg:w="4757307"/><text x="97.5256%" y="719.50"></text></g><g><title>array_list.ArrayListAligned (86,729,583 samples, 0.33%)</title><rect x="97.0154%" y="869" width="0.3346%" height="15" fill="rgb(220,160,43)" fg:x="25147628890" fg:w="86729583"/><text x="97.2654%" y="879.50"></text></g><g><title>result.Result.next (9,139,006 samples, 0.04%)</title><rect x="97.3148%" y="853" width="0.0353%" height="15" fill="rgb(213,52,39)" fg:x="25225219467" fg:w="9139006"/><text x="97.5648%" y="863.50"></text></g><g><title>compiler_rt.memcpy.memcpy (8,245,046 samples, 0.03%)</title><rect x="97.3500%" y="869" width="0.0318%" height="15" fill="rgb(243,137,7)" fg:x="25234358473" fg:w="8245046"/><text x="97.6000%" y="879.50"></text></g><g><title>database.DB.getOsmWaysInArea (9,596,838 samples, 0.04%)</title><rect x="97.3833%" y="869" width="0.0370%" height="15" fill="rgb(230,79,13)" fg:x="25242977190" fg:w="9596838"/><text x="97.6333%" y="879.50"></text></g><g><title>heap.FixedBufferAllocator.alloc (5,141,867 samples, 0.02%)</title><rect x="97.4598%" y="741" width="0.0198%" height="15" fill="rgb(247,105,23)" fg:x="25262808452" fg:w="5141867"/><text x="97.7098%" y="751.50"></text></g><g><title>mem.alignPointerOffset__anon_12919 (5,141,867 samples, 0.02%)</title><rect x="97.4598%" y="725" width="0.0198%" height="15" fill="rgb(223,179,41)" fg:x="25262808452" fg:w="5141867"/><text x="97.7098%" y="735.50"></text></g><g><title>mem.isValidAlign (3,655,078 samples, 0.01%)</title><rect x="97.4655%" y="709" width="0.0141%" height="15" fill="rgb(218,9,34)" fg:x="25264295241" fg:w="3655078"/><text x="97.7155%" y="719.50"></text></g><g><title>mem.isValidAlignGeneric__anon_12071 (3,655,078 samples, 0.01%)</title><rect x="97.4655%" y="693" width="0.0141%" height="15" fill="rgb(222,106,8)" fg:x="25264295241" fg:w="3655078"/><text x="97.7155%" y="703.50"></text></g><g><title>mem.Allocator.alloc__anon_4378 (12,241,748 samples, 0.05%)</title><rect x="97.4454%" y="853" width="0.0472%" height="15" fill="rgb(211,220,0)" fg:x="25259083813" fg:w="12241748"/><text x="97.6954%" y="863.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (12,241,748 samples, 0.05%)</title><rect x="97.4454%" y="837" width="0.0472%" height="15" fill="rgb(229,52,16)" fg:x="25259083813" fg:w="12241748"/><text x="97.6954%" y="847.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_7204 (12,241,748 samples, 0.05%)</title><rect x="97.4454%" y="821" width="0.0472%" height="15" fill="rgb(212,155,18)" fg:x="25259083813" fg:w="12241748"/><text x="97.6954%" y="831.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_12908 (12,241,748 samples, 0.05%)</title><rect x="97.4454%" y="805" width="0.0472%" height="15" fill="rgb(242,21,14)" fg:x="25259083813" fg:w="12241748"/><text x="97.6954%" y="815.50"></text></g><g><title>mem.Allocator.rawAlloc (10,419,389 samples, 0.04%)</title><rect x="97.4525%" y="789" width="0.0402%" height="15" fill="rgb(222,19,48)" fg:x="25260906172" fg:w="10419389"/><text x="97.7025%" y="799.50"></text></g><g><title>httpz.FallbackAllocator.alloc (10,419,389 samples, 0.04%)</title><rect x="97.4525%" y="773" width="0.0402%" height="15" fill="rgb(232,45,27)" fg:x="25260906172" fg:w="10419389"/><text x="97.7025%" y="783.50"></text></g><g><title>mem.Allocator.rawAlloc (10,419,389 samples, 0.04%)</title><rect x="97.4525%" y="757" width="0.0402%" height="15" fill="rgb(249,103,42)" fg:x="25260906172" fg:w="10419389"/><text x="97.7025%" y="767.50"></text></g><g><title>mem.Allocator.dupe__anon_4587 (15,557,553 samples, 0.06%)</title><rect x="97.4398%" y="869" width="0.0600%" height="15" fill="rgb(246,81,33)" fg:x="25257632186" fg:w="15557553"/><text x="97.6898%" y="879.50"></text></g><g><title>mem.eqlBytes (34,056,435 samples, 0.13%)</title><rect x="97.5061%" y="869" width="0.1314%" height="15" fill="rgb(252,33,42)" fg:x="25274814027" fg:w="34056435"/><text x="97.7561%" y="879.50"></text></g><g><title>database.DB.getOsmWaysInArea (3,576,283 samples, 0.01%)</title><rect x="97.6375%" y="853" width="0.0138%" height="15" fill="rgb(209,212,41)" fg:x="25308870462" fg:w="3576283"/><text x="97.8875%" y="863.50"></text></g><g><title>result.Row.get__anon_13334 (6,010,629 samples, 0.02%)</title><rect x="97.6513%" y="853" width="0.0232%" height="15" fill="rgb(207,154,6)" fg:x="25312455323" fg:w="6010629"/><text x="97.9013%" y="863.50"></text></g><g><title>result.Row.get__anon_8256 (8,006,118 samples, 0.03%)</title><rect x="97.6745%" y="853" width="0.0309%" height="15" fill="rgb(223,64,47)" fg:x="25318465952" fg:w="8006118"/><text x="97.9245%" y="863.50"></text></g><g><title>result.Row.get__anon_8257 (3,572,223 samples, 0.01%)</title><rect x="97.7054%" y="853" width="0.0138%" height="15" fill="rgb(211,161,38)" fg:x="25326472070" fg:w="3572223"/><text x="97.9554%" y="863.50"></text></g><g><title>result.Row.get__anon_8258 (2,791,463 samples, 0.01%)</title><rect x="97.7192%" y="853" width="0.0108%" height="15" fill="rgb(219,138,40)" fg:x="25330044293" fg:w="2791463"/><text x="97.9692%" y="863.50"></text></g><g><title>mem.eql__anon_5157 (31,792,932 samples, 0.12%)</title><rect x="97.6375%" y="869" width="0.1227%" height="15" fill="rgb(241,228,46)" fg:x="25308870462" fg:w="31792932"/><text x="97.8875%" y="879.50"></text></g><g><title>types.Types.Int64.decodeKnown (4,365,831 samples, 0.02%)</title><rect x="97.7433%" y="853" width="0.0168%" height="15" fill="rgb(223,209,38)" fg:x="25336297563" fg:w="4365831"/><text x="97.9933%" y="863.50"></text></g><g><title>mem.sliceAsBytes__anon_7521 (4,884,101 samples, 0.02%)</title><rect x="97.7601%" y="869" width="0.0188%" height="15" fill="rgb(236,164,45)" fg:x="25340663394" fg:w="4884101"/><text x="98.0101%" y="879.50"></text></g><g><title>reader.ReaderT (17,614,841 samples, 0.07%)</title><rect x="97.7847%" y="869" width="0.0680%" height="15" fill="rgb(231,15,5)" fg:x="25347040365" fg:w="17614841"/><text x="98.0347%" y="879.50"></text></g><g><title>array_list.ArrayListAligned (2,854,173 samples, 0.01%)</title><rect x="97.9631%" y="837" width="0.0110%" height="15" fill="rgb(252,35,15)" fg:x="25393264712" fg:w="2854173"/><text x="98.2131%" y="847.50"></text></g><g><title>database.DB.getOsmWaysInArea (5,704,979 samples, 0.02%)</title><rect x="97.9741%" y="837" width="0.0220%" height="15" fill="rgb(248,181,18)" fg:x="25396118885" fg:w="5704979"/><text x="98.2241%" y="847.50"></text></g><g><title>mem.eqlBytes (5,302,609 samples, 0.02%)</title><rect x="97.9961%" y="837" width="0.0205%" height="15" fill="rgb(233,39,42)" fg:x="25401823864" fg:w="5302609"/><text x="98.2461%" y="847.50"></text></g><g><title>array_list.ArrayListAligned (4,769,167 samples, 0.02%)</title><rect x="98.0237%" y="821" width="0.0184%" height="15" fill="rgb(238,110,33)" fg:x="25408978974" fg:w="4769167"/><text x="98.2737%" y="831.50"></text></g><g><title>database.DB.getOsmWaysInArea (6,474,479 samples, 0.02%)</title><rect x="98.0476%" y="821" width="0.0250%" height="15" fill="rgb(233,195,10)" fg:x="25415188019" fg:w="6474479"/><text x="98.2976%" y="831.50"></text></g><g><title>os.linux.x86_64.syscall3 (45,655,277 samples, 0.18%)</title><rect x="98.0946%" y="757" width="0.1761%" height="15" fill="rgb(254,105,3)" fg:x="25427366491" fg:w="45655277"/><text x="98.3446%" y="767.50"></text></g><g><title>[unknown] (45,655,277 samples, 0.18%)</title><rect x="98.0946%" y="741" width="0.1761%" height="15" fill="rgb(221,225,9)" fg:x="25427366491" fg:w="45655277"/><text x="98.3446%" y="751.50"></text></g><g><title>[unknown] (45,655,277 samples, 0.18%)</title><rect x="98.0946%" y="725" width="0.1761%" height="15" fill="rgb(224,227,45)" fg:x="25427366491" fg:w="45655277"/><text x="98.3446%" y="735.50"></text></g><g><title>[unknown] (45,655,277 samples, 0.18%)</title><rect x="98.0946%" y="709" width="0.1761%" height="15" fill="rgb(229,198,43)" fg:x="25427366491" fg:w="45655277"/><text x="98.3446%" y="719.50"></text></g><g><title>[unknown] (45,655,277 samples, 0.18%)</title><rect x="98.0946%" y="693" width="0.1761%" height="15" fill="rgb(206,209,35)" fg:x="25427366491" fg:w="45655277"/><text x="98.3446%" y="703.50"></text></g><g><title>[unknown] (45,655,277 samples, 0.18%)</title><rect x="98.0946%" y="677" width="0.1761%" height="15" fill="rgb(245,195,53)" fg:x="25427366491" fg:w="45655277"/><text x="98.3446%" y="687.50"></text></g><g><title>[unknown] (44,416,529 samples, 0.17%)</title><rect x="98.0994%" y="661" width="0.1714%" height="15" fill="rgb(240,92,26)" fg:x="25428605239" fg:w="44416529"/><text x="98.3494%" y="671.50"></text></g><g><title>[unknown] (41,666,628 samples, 0.16%)</title><rect x="98.1100%" y="645" width="0.1607%" height="15" fill="rgb(207,40,23)" fg:x="25431355140" fg:w="41666628"/><text x="98.3600%" y="655.50"></text></g><g><title>[unknown] (41,666,628 samples, 0.16%)</title><rect x="98.1100%" y="629" width="0.1607%" height="15" fill="rgb(223,111,35)" fg:x="25431355140" fg:w="41666628"/><text x="98.3600%" y="639.50"></text></g><g><title>[unknown] (41,666,628 samples, 0.16%)</title><rect x="98.1100%" y="613" width="0.1607%" height="15" fill="rgb(229,147,28)" fg:x="25431355140" fg:w="41666628"/><text x="98.3600%" y="623.50"></text></g><g><title>[unknown] (40,135,327 samples, 0.15%)</title><rect x="98.1159%" y="597" width="0.1548%" height="15" fill="rgb(211,29,28)" fg:x="25432886441" fg:w="40135327"/><text x="98.3659%" y="607.50"></text></g><g><title>[unknown] (37,059,301 samples, 0.14%)</title><rect x="98.1278%" y="581" width="0.1430%" height="15" fill="rgb(228,72,33)" fg:x="25435962467" fg:w="37059301"/><text x="98.3778%" y="591.50"></text></g><g><title>[unknown] (30,967,878 samples, 0.12%)</title><rect x="98.1513%" y="565" width="0.1195%" height="15" fill="rgb(205,214,31)" fg:x="25442053890" fg:w="30967878"/><text x="98.4013%" y="575.50"></text></g><g><title>[unknown] (30,967,878 samples, 0.12%)</title><rect x="98.1513%" y="549" width="0.1195%" height="15" fill="rgb(224,111,15)" fg:x="25442053890" fg:w="30967878"/><text x="98.4013%" y="559.50"></text></g><g><title>[unknown] (30,967,878 samples, 0.12%)</title><rect x="98.1513%" y="533" width="0.1195%" height="15" fill="rgb(253,21,26)" fg:x="25442053890" fg:w="30967878"/><text x="98.4013%" y="543.50"></text></g><g><title>[unknown] (26,261,363 samples, 0.10%)</title><rect x="98.1694%" y="517" width="0.1013%" height="15" fill="rgb(245,139,43)" fg:x="25446760405" fg:w="26261363"/><text x="98.4194%" y="527.50"></text></g><g><title>[unknown] (24,918,591 samples, 0.10%)</title><rect x="98.1746%" y="501" width="0.0961%" height="15" fill="rgb(252,170,7)" fg:x="25448103177" fg:w="24918591"/><text x="98.4246%" y="511.50"></text></g><g><title>[unknown] (23,400,020 samples, 0.09%)</title><rect x="98.1805%" y="485" width="0.0903%" height="15" fill="rgb(231,118,14)" fg:x="25449621748" fg:w="23400020"/><text x="98.4305%" y="495.50"></text></g><g><title>[unknown] (21,942,470 samples, 0.08%)</title><rect x="98.1861%" y="469" width="0.0847%" height="15" fill="rgb(238,83,0)" fg:x="25451079298" fg:w="21942470"/><text x="98.4361%" y="479.50"></text></g><g><title>[unknown] (20,335,988 samples, 0.08%)</title><rect x="98.1923%" y="453" width="0.0785%" height="15" fill="rgb(221,39,39)" fg:x="25452685780" fg:w="20335988"/><text x="98.4423%" y="463.50"></text></g><g><title>[unknown] (18,792,633 samples, 0.07%)</title><rect x="98.1983%" y="437" width="0.0725%" height="15" fill="rgb(222,119,46)" fg:x="25454229135" fg:w="18792633"/><text x="98.4483%" y="447.50"></text></g><g><title>[unknown] (17,063,509 samples, 0.07%)</title><rect x="98.2049%" y="421" width="0.0658%" height="15" fill="rgb(222,165,49)" fg:x="25455958259" fg:w="17063509"/><text x="98.4549%" y="431.50"></text></g><g><title>[unknown] (17,062,152 samples, 0.07%)</title><rect x="98.2049%" y="405" width="0.0658%" height="15" fill="rgb(219,113,52)" fg:x="25455959616" fg:w="17062152"/><text x="98.4549%" y="415.50"></text></g><g><title>[unknown] (17,062,152 samples, 0.07%)</title><rect x="98.2049%" y="389" width="0.0658%" height="15" fill="rgb(214,7,15)" fg:x="25455959616" fg:w="17062152"/><text x="98.4549%" y="399.50"></text></g><g><title>[unknown] (17,060,968 samples, 0.07%)</title><rect x="98.2049%" y="373" width="0.0658%" height="15" fill="rgb(235,32,4)" fg:x="25455960800" fg:w="17060968"/><text x="98.4549%" y="383.50"></text></g><g><title>[unknown] (17,060,968 samples, 0.07%)</title><rect x="98.2049%" y="357" width="0.0658%" height="15" fill="rgb(238,90,54)" fg:x="25455960800" fg:w="17060968"/><text x="98.4549%" y="367.50"></text></g><g><title>[unknown] (15,515,449 samples, 0.06%)</title><rect x="98.2109%" y="341" width="0.0599%" height="15" fill="rgb(213,208,19)" fg:x="25457506319" fg:w="15515449"/><text x="98.4609%" y="351.50"></text></g><g><title>[unknown] (15,515,449 samples, 0.06%)</title><rect x="98.2109%" y="325" width="0.0599%" height="15" fill="rgb(233,156,4)" fg:x="25457506319" fg:w="15515449"/><text x="98.4609%" y="335.50"></text></g><g><title>[unknown] (15,515,449 samples, 0.06%)</title><rect x="98.2109%" y="309" width="0.0599%" height="15" fill="rgb(207,194,5)" fg:x="25457506319" fg:w="15515449"/><text x="98.4609%" y="319.50"></text></g><g><title>[unknown] (14,148,478 samples, 0.05%)</title><rect x="98.2162%" y="293" width="0.0546%" height="15" fill="rgb(206,111,30)" fg:x="25458873290" fg:w="14148478"/><text x="98.4662%" y="303.50"></text></g><g><title>[unknown] (11,455,729 samples, 0.04%)</title><rect x="98.2266%" y="277" width="0.0442%" height="15" fill="rgb(243,70,54)" fg:x="25461566039" fg:w="11455729"/><text x="98.4766%" y="287.50"></text></g><g><title>[unknown] (11,455,729 samples, 0.04%)</title><rect x="98.2266%" y="261" width="0.0442%" height="15" fill="rgb(242,28,8)" fg:x="25461566039" fg:w="11455729"/><text x="98.4766%" y="271.50"></text></g><g><title>[unknown] (11,455,729 samples, 0.04%)</title><rect x="98.2266%" y="245" width="0.0442%" height="15" fill="rgb(219,106,18)" fg:x="25461566039" fg:w="11455729"/><text x="98.4766%" y="255.50"></text></g><g><title>[unknown] (11,455,729 samples, 0.04%)</title><rect x="98.2266%" y="229" width="0.0442%" height="15" fill="rgb(244,222,10)" fg:x="25461566039" fg:w="11455729"/><text x="98.4766%" y="239.50"></text></g><g><title>[unknown] (9,406,666 samples, 0.04%)</title><rect x="98.2345%" y="213" width="0.0363%" height="15" fill="rgb(236,179,52)" fg:x="25463615102" fg:w="9406666"/><text x="98.4845%" y="223.50"></text></g><g><title>[unknown] (9,406,666 samples, 0.04%)</title><rect x="98.2345%" y="197" width="0.0363%" height="15" fill="rgb(213,23,39)" fg:x="25463615102" fg:w="9406666"/><text x="98.4845%" y="207.50"></text></g><g><title>[unknown] (9,406,666 samples, 0.04%)</title><rect x="98.2345%" y="181" width="0.0363%" height="15" fill="rgb(238,48,10)" fg:x="25463615102" fg:w="9406666"/><text x="98.4845%" y="191.50"></text></g><g><title>[unknown] (9,406,666 samples, 0.04%)</title><rect x="98.2345%" y="165" width="0.0363%" height="15" fill="rgb(251,196,23)" fg:x="25463615102" fg:w="9406666"/><text x="98.4845%" y="175.50"></text></g><g><title>[unknown] (9,406,666 samples, 0.04%)</title><rect x="98.2345%" y="149" width="0.0363%" height="15" fill="rgb(250,152,24)" fg:x="25463615102" fg:w="9406666"/><text x="98.4845%" y="159.50"></text></g><g><title>[unknown] (7,444,737 samples, 0.03%)</title><rect x="98.2420%" y="133" width="0.0287%" height="15" fill="rgb(209,150,17)" fg:x="25465577031" fg:w="7444737"/><text x="98.4920%" y="143.50"></text></g><g><title>[unknown] (7,444,737 samples, 0.03%)</title><rect x="98.2420%" y="117" width="0.0287%" height="15" fill="rgb(234,202,34)" fg:x="25465577031" fg:w="7444737"/><text x="98.4920%" y="127.50"></text></g><g><title>[unknown] (7,444,737 samples, 0.03%)</title><rect x="98.2420%" y="101" width="0.0287%" height="15" fill="rgb(253,148,53)" fg:x="25465577031" fg:w="7444737"/><text x="98.4920%" y="111.50"></text></g><g><title>[unknown] (7,444,737 samples, 0.03%)</title><rect x="98.2420%" y="85" width="0.0287%" height="15" fill="rgb(218,129,16)" fg:x="25465577031" fg:w="7444737"/><text x="98.4920%" y="95.50"></text></g><g><title>[unknown] (7,444,737 samples, 0.03%)</title><rect x="98.2420%" y="69" width="0.0287%" height="15" fill="rgb(216,85,19)" fg:x="25465577031" fg:w="7444737"/><text x="98.4920%" y="79.50"></text></g><g><title>[unknown] (6,041,049 samples, 0.02%)</title><rect x="98.2475%" y="53" width="0.0233%" height="15" fill="rgb(235,228,7)" fg:x="25466980719" fg:w="6041049"/><text x="98.4975%" y="63.50"></text></g><g><title>[unknown] (4,496,913 samples, 0.02%)</title><rect x="98.2534%" y="37" width="0.0173%" height="15" fill="rgb(245,175,0)" fg:x="25468524855" fg:w="4496913"/><text x="98.5034%" y="47.50"></text></g><g><title>reader.ReaderT (50,149,799 samples, 0.19%)</title><rect x="98.0850%" y="821" width="0.1935%" height="15" fill="rgb(208,168,36)" fg:x="25424871260" fg:w="50149799"/><text x="98.3350%" y="831.50"></text></g><g><title>net.Stream.read (50,149,799 samples, 0.19%)</title><rect x="98.0850%" y="805" width="0.1935%" height="15" fill="rgb(246,171,24)" fg:x="25424871260" fg:w="50149799"/><text x="98.3350%" y="815.50"></text></g><g><title>posix.read (50,135,676 samples, 0.19%)</title><rect x="98.0851%" y="789" width="0.1934%" height="15" fill="rgb(215,142,24)" fg:x="25424885383" fg:w="50135676"/><text x="98.3351%" y="799.50"></text></g><g><title>os.linux.read (50,135,676 samples, 0.19%)</title><rect x="98.0851%" y="773" width="0.1934%" height="15" fill="rgb(250,187,7)" fg:x="25424885383" fg:w="50135676"/><text x="98.3351%" y="783.50"></text></g><g><title>conn.Conn.read (88,129,367 samples, 0.34%)</title><rect x="97.9631%" y="853" width="0.3400%" height="15" fill="rgb(228,66,33)" fg:x="25393264712" fg:w="88129367"/><text x="98.2131%" y="863.50"></text></g><g><title>reader.ReaderT (72,415,105 samples, 0.28%)</title><rect x="98.0237%" y="837" width="0.2794%" height="15" fill="rgb(234,215,21)" fg:x="25408978974" fg:w="72415105"/><text x="98.2737%" y="847.50"></text></g><g><title>result.Result.next (118,554,432 samples, 0.46%)</title><rect x="97.8527%" y="869" width="0.4574%" height="15" fill="rgb(222,191,20)" fg:x="25364655206" fg:w="118554432"/><text x="98.1027%" y="879.50"></text></g><g><title>reader.ReaderT (4,298,160 samples, 0.02%)</title><rect x="98.3341%" y="837" width="0.0166%" height="15" fill="rgb(245,79,54)" fg:x="25489440215" fg:w="4298160"/><text x="98.5841%" y="847.50"></text></g><g><title>result.Row.get__anon_8256 (13,793,377 samples, 0.05%)</title><rect x="98.3219%" y="869" width="0.0532%" height="15" fill="rgb(240,10,37)" fg:x="25486285582" fg:w="13793377"/><text x="98.5719%" y="879.50"></text></g><g><title>result.getScalar__anon_13329 (10,638,744 samples, 0.04%)</title><rect x="98.3341%" y="853" width="0.0410%" height="15" fill="rgb(214,192,32)" fg:x="25489440215" fg:w="10638744"/><text x="98.5841%" y="863.50"></text></g><g><title>types.Types.Int64.decode (4,521,419 samples, 0.02%)</title><rect x="98.3577%" y="837" width="0.0174%" height="15" fill="rgb(209,36,54)" fg:x="25495557540" fg:w="4521419"/><text x="98.6077%" y="847.50"></text></g><g><title>reader.ReaderT (4,521,419 samples, 0.02%)</title><rect x="98.3577%" y="821" width="0.0174%" height="15" fill="rgb(220,10,11)" fg:x="25495557540" fg:w="4521419"/><text x="98.6077%" y="831.50"></text></g><g><title>result.Result.next (3,663,510 samples, 0.01%)</title><rect x="98.3963%" y="853" width="0.0141%" height="15" fill="rgb(221,106,17)" fg:x="25505560084" fg:w="3663510"/><text x="98.6463%" y="863.50"></text></g><g><title>result.Row.get__anon_8257 (12,849,614 samples, 0.05%)</title><rect x="98.3751%" y="869" width="0.0496%" height="15" fill="rgb(251,142,44)" fg:x="25500078959" fg:w="12849614"/><text x="98.6251%" y="879.50"></text></g><g><title>result.Row.get__anon_8256 (3,704,979 samples, 0.01%)</title><rect x="98.4104%" y="853" width="0.0143%" height="15" fill="rgb(238,13,15)" fg:x="25509223594" fg:w="3704979"/><text x="98.6604%" y="863.50"></text></g><g><title>result.getScalar__anon_13329 (3,704,979 samples, 0.01%)</title><rect x="98.4104%" y="837" width="0.0143%" height="15" fill="rgb(208,107,27)" fg:x="25509223594" fg:w="3704979"/><text x="98.6604%" y="847.50"></text></g><g><title>types.Types.Int64.decode (3,704,979 samples, 0.01%)</title><rect x="98.4104%" y="821" width="0.0143%" height="15" fill="rgb(205,136,37)" fg:x="25509223594" fg:w="3704979"/><text x="98.6604%" y="831.50"></text></g><g><title>result.Result.next (3,704,979 samples, 0.01%)</title><rect x="98.4104%" y="805" width="0.0143%" height="15" fill="rgb(250,205,27)" fg:x="25509223594" fg:w="3704979"/><text x="98.6604%" y="815.50"></text></g><g><title>result.Result.next (10,921,553 samples, 0.04%)</title><rect x="98.4247%" y="853" width="0.0421%" height="15" fill="rgb(210,80,43)" fg:x="25512928573" fg:w="10921553"/><text x="98.6747%" y="863.50"></text></g><g><title>result.Result.next (3,527,612 samples, 0.01%)</title><rect x="98.4668%" y="821" width="0.0136%" height="15" fill="rgb(247,160,36)" fg:x="25523850126" fg:w="3527612"/><text x="98.7168%" y="831.50"></text></g><g><title>result.Row.get__anon_8258 (24,297,699 samples, 0.09%)</title><rect x="98.4247%" y="869" width="0.0937%" height="15" fill="rgb(234,13,49)" fg:x="25512928573" fg:w="24297699"/><text x="98.6747%" y="879.50"></text></g><g><title>result.Row.get__anon_13334 (13,376,146 samples, 0.05%)</title><rect x="98.4668%" y="853" width="0.0516%" height="15" fill="rgb(234,122,0)" fg:x="25523850126" fg:w="13376146"/><text x="98.7168%" y="863.50"></text></g><g><title>result.getScalar__anon_14268 (13,376,146 samples, 0.05%)</title><rect x="98.4668%" y="837" width="0.0516%" height="15" fill="rgb(207,146,38)" fg:x="25523850126" fg:w="13376146"/><text x="98.7168%" y="847.50"></text></g><g><title>types.Types.Float64.decode (9,848,534 samples, 0.04%)</title><rect x="98.4805%" y="821" width="0.0380%" height="15" fill="rgb(207,177,25)" fg:x="25527377738" fg:w="9848534"/><text x="98.7305%" y="831.50"></text></g><g><title>result.Result.next (6,668,010 samples, 0.03%)</title><rect x="98.4927%" y="805" width="0.0257%" height="15" fill="rgb(211,178,42)" fg:x="25530558262" fg:w="6668010"/><text x="98.7427%" y="815.50"></text></g><g><title>mem.eqlBytes (3,983,008 samples, 0.02%)</title><rect x="98.5240%" y="853" width="0.0154%" height="15" fill="rgb(230,69,54)" fg:x="25538675012" fg:w="3983008"/><text x="98.7740%" y="863.50"></text></g><g><title>result.Row.get__anon_8259 (10,368,269 samples, 0.04%)</title><rect x="98.5184%" y="869" width="0.0400%" height="15" fill="rgb(214,135,41)" fg:x="25537226272" fg:w="10368269"/><text x="98.7684%" y="879.50"></text></g><g><title>types.Types.Int64.decodeKnown (3,461,253 samples, 0.01%)</title><rect x="98.5451%" y="853" width="0.0134%" height="15" fill="rgb(237,67,25)" fg:x="25544133288" fg:w="3461253"/><text x="98.7951%" y="863.50"></text></g><g><title>database.DB.getOsmWaysInArea (405,046,638 samples, 1.56%)</title><rect x="97.0023%" y="885" width="1.5626%" height="15" fill="rgb(222,189,50)" fg:x="25144226777" fg:w="405046638"/><text x="97.2523%" y="895.50"></text></g><g><title>compiler_rt.memset.memset (4,142,890 samples, 0.02%)</title><rect x="98.6435%" y="709" width="0.0160%" height="15" fill="rgb(245,148,34)" fg:x="25569646450" fg:w="4142890"/><text x="98.8935%" y="719.50"></text></g><g><title>crypto.hmac.Hmac (22,855,885 samples, 0.09%)</title><rect x="98.6595%" y="709" width="0.0882%" height="15" fill="rgb(222,29,6)" fg:x="25573789340" fg:w="22855885"/><text x="98.9095%" y="719.50"></text></g><g><title>compiler_rt.memset.memset (3,227,310 samples, 0.01%)</title><rect x="98.8650%" y="693" width="0.0125%" height="15" fill="rgb(221,189,43)" fg:x="25627052065" fg:w="3227310"/><text x="99.1150%" y="703.50"></text></g><g><title>crypto.sha2.Sha2x32 (3,646,139 samples, 0.01%)</title><rect x="98.8774%" y="693" width="0.0141%" height="15" fill="rgb(207,36,27)" fg:x="25630279375" fg:w="3646139"/><text x="99.1274%" y="703.50"></text></g><g><title>crypto.hmac.Hmac (89,028,781 samples, 0.34%)</title><rect x="98.5649%" y="741" width="0.3435%" height="15" fill="rgb(217,90,24)" fg:x="25549273415" fg:w="89028781"/><text x="98.8149%" y="751.50"></text></g><g><title>crypto.sha2.Sha2x32 (85,604,504 samples, 0.33%)</title><rect x="98.5781%" y="725" width="0.3302%" height="15" fill="rgb(224,66,35)" fg:x="25552697692" fg:w="85604504"/><text x="98.8281%" y="735.50"></text></g><g><title>crypto.sha2.Sha2x32 (41,656,971 samples, 0.16%)</title><rect x="98.7477%" y="709" width="0.1607%" height="15" fill="rgb(221,13,50)" fg:x="25596645225" fg:w="41656971"/><text x="98.9977%" y="719.50"></text></g><g><title>mem.readInt (4,376,682 samples, 0.02%)</title><rect x="98.8915%" y="693" width="0.0169%" height="15" fill="rgb(236,68,49)" fg:x="25633925514" fg:w="4376682"/><text x="99.1415%" y="703.50"></text></g><g><title>crypto.pbkdf2.pbkdf2__anon_5146 (10,172,619 samples, 0.04%)</title><rect x="98.9084%" y="741" width="0.0392%" height="15" fill="rgb(229,146,28)" fg:x="25638302196" fg:w="10172619"/><text x="99.1584%" y="751.50"></text></g><g><title>crypto.pbkdf2.pbkdf2__anon_5146 (107,198,163 samples, 0.41%)</title><rect x="98.5649%" y="773" width="0.4136%" height="15" fill="rgb(225,31,38)" fg:x="25549273415" fg:w="107198163"/><text x="98.8149%" y="783.50"></text></g><g><title>crypto.hmac.Hmac (107,198,163 samples, 0.41%)</title><rect x="98.5649%" y="757" width="0.4136%" height="15" fill="rgb(250,208,3)" fg:x="25549273415" fg:w="107198163"/><text x="98.8149%" y="767.50"></text></g><g><title>crypto.sha2.Sha2x32 (7,996,763 samples, 0.03%)</title><rect x="98.9476%" y="741" width="0.0309%" height="15" fill="rgb(246,54,23)" fg:x="25648474815" fg:w="7996763"/><text x="99.1976%" y="751.50"></text></g><g><title>auth.saslAuth (116,783,430 samples, 0.45%)</title><rect x="98.5649%" y="805" width="0.4505%" height="15" fill="rgb(243,76,11)" fg:x="25549273415" fg:w="116783430"/><text x="98.8149%" y="815.50"></text></g><g><title>auth.SASL.clientFinalMessage (116,783,430 samples, 0.45%)</title><rect x="98.5649%" y="789" width="0.4505%" height="15" fill="rgb(245,21,50)" fg:x="25549273415" fg:w="116783430"/><text x="98.8149%" y="799.50"></text></g><g><title>crypto.sha2.Sha2x32 (9,585,267 samples, 0.04%)</title><rect x="98.9785%" y="773" width="0.0370%" height="15" fill="rgb(228,9,43)" fg:x="25656471578" fg:w="9585267"/><text x="99.2285%" y="783.50"></text></g><g><title>conn.Conn.auth (116,789,187 samples, 0.45%)</title><rect x="98.5649%" y="837" width="0.4506%" height="15" fill="rgb(208,100,47)" fg:x="25549273415" fg:w="116789187"/><text x="98.8149%" y="847.50"></text></g><g><title>auth.auth (116,789,187 samples, 0.45%)</title><rect x="98.5649%" y="821" width="0.4506%" height="15" fill="rgb(232,26,8)" fg:x="25549273415" fg:w="116789187"/><text x="98.8149%" y="831.50"></text></g><g><title>database.DB.init (119,696,530 samples, 0.46%)</title><rect x="98.5649%" y="885" width="0.4618%" height="15" fill="rgb(216,166,38)" fg:x="25549273415" fg:w="119696530"/><text x="98.8149%" y="895.50"></text></g><g><title>pool.Pool.init (119,696,530 samples, 0.46%)</title><rect x="98.5649%" y="869" width="0.4618%" height="15" fill="rgb(251,202,51)" fg:x="25549273415" fg:w="119696530"/><text x="98.8149%" y="879.50"></text></g><g><title>pool.newConnection (119,696,530 samples, 0.46%)</title><rect x="98.5649%" y="853" width="0.4618%" height="15" fill="rgb(254,216,34)" fg:x="25549273415" fg:w="119696530"/><text x="98.8149%" y="863.50"></text></g><g><title>conn.Conn.open (2,907,343 samples, 0.01%)</title><rect x="99.0155%" y="837" width="0.0112%" height="15" fill="rgb(251,32,27)" fg:x="25666062602" fg:w="2907343"/><text x="99.2655%" y="847.50"></text></g><g><title>net.tcpConnectToHost (2,907,343 samples, 0.01%)</title><rect x="99.0155%" y="821" width="0.0112%" height="15" fill="rgb(208,127,28)" fg:x="25666062602" fg:w="2907343"/><text x="99.2655%" y="831.50"></text></g><g><title>net.getAddressList (2,907,343 samples, 0.01%)</title><rect x="99.0155%" y="805" width="0.0112%" height="15" fill="rgb(224,137,22)" fg:x="25666062602" fg:w="2907343"/><text x="99.2655%" y="815.50"></text></g><g><title>mem.Allocator.create__anon_12107 (2,907,343 samples, 0.01%)</title><rect x="99.0155%" y="789" width="0.0112%" height="15" fill="rgb(254,70,32)" fg:x="25666062602" fg:w="2907343"/><text x="99.2655%" y="799.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (2,907,343 samples, 0.01%)</title><rect x="99.0155%" y="773" width="0.0112%" height="15" fill="rgb(229,75,37)" fg:x="25666062602" fg:w="2907343"/><text x="99.2655%" y="783.50"></text></g><g><title>mem.Allocator.rawAlloc (2,907,343 samples, 0.01%)</title><rect x="99.0155%" y="757" width="0.0112%" height="15" fill="rgb(252,64,23)" fg:x="25666062602" fg:w="2907343"/><text x="99.2655%" y="767.50"></text></g><g><title>heap.arena_allocator.ArenaAllocator.createNode (2,907,343 samples, 0.01%)</title><rect x="99.0155%" y="741" width="0.0112%" height="15" fill="rgb(232,162,48)" fg:x="25666062602" fg:w="2907343"/><text x="99.2655%" y="751.50"></text></g><g><title>debug.assert (6,253,124 samples, 0.02%)</title><rect x="99.0267%" y="885" width="0.0241%" height="15" fill="rgb(246,160,12)" fg:x="25668969945" fg:w="6253124"/><text x="99.2767%" y="895.50"></text></g><g><title>hash_map.HashMapUnmanaged (9,952,222 samples, 0.04%)</title><rect x="99.0508%" y="885" width="0.0384%" height="15" fill="rgb(247,166,0)" fg:x="25675223069" fg:w="9952222"/><text x="99.3008%" y="895.50"></text></g><g><title>httpz.ServerCtx (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="885" width="0.0144%" height="15" fill="rgb(249,219,21)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="895.50"></text></g><g><title>worker.NonBlocking (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="869" width="0.0144%" height="15" fill="rgb(205,209,3)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="879.50"></text></g><g><title>worker.Manager.init (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="853" width="0.0144%" height="15" fill="rgb(243,44,1)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="863.50"></text></g><g><title>worker.initializeBufferPool (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="837" width="0.0144%" height="15" fill="rgb(206,159,16)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="847.50"></text></g><g><title>buffer.Pool.init.2 (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="821" width="0.0144%" height="15" fill="rgb(244,77,30)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="831.50"></text></g><g><title>mem.Allocator.alloc__anon_4378 (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="805" width="0.0144%" height="15" fill="rgb(218,69,12)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="815.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="789" width="0.0144%" height="15" fill="rgb(212,87,7)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="799.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_7204 (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="773" width="0.0144%" height="15" fill="rgb(245,114,25)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="783.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_12908 (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="757" width="0.0144%" height="15" fill="rgb(210,61,42)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="767.50"></text></g><g><title>compiler_rt.memset.memset (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="741" width="0.0144%" height="15" fill="rgb(211,52,33)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="751.50"></text></g><g><title>[unknown] (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="725" width="0.0144%" height="15" fill="rgb(234,58,33)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="735.50"></text></g><g><title>[unknown] (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="709" width="0.0144%" height="15" fill="rgb(220,115,36)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="719.50"></text></g><g><title>[unknown] (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="693" width="0.0144%" height="15" fill="rgb(243,153,54)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="703.50"></text></g><g><title>[unknown] (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="677" width="0.0144%" height="15" fill="rgb(251,47,18)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="687.50"></text></g><g><title>[unknown] (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="661" width="0.0144%" height="15" fill="rgb(242,102,42)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="671.50"></text></g><g><title>[unknown] (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="645" width="0.0144%" height="15" fill="rgb(234,31,38)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="655.50"></text></g><g><title>[unknown] (3,740,811 samples, 0.01%)</title><rect x="99.1021%" y="629" width="0.0144%" height="15" fill="rgb(221,117,51)" fg:x="25688524487" fg:w="3740811"/><text x="99.3521%" y="639.50"></text></g><g><title>main.main (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="885" width="0.0146%" height="15" fill="rgb(212,20,18)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="895.50"></text></g><g><title>httpz.Server (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="869" width="0.0146%" height="15" fill="rgb(245,133,36)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="879.50"></text></g><g><title>httpz.ServerCtx (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="853" width="0.0146%" height="15" fill="rgb(212,6,19)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="863.50"></text></g><g><title>thread_pool.ThreadPool (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="837" width="0.0146%" height="15" fill="rgb(218,1,36)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="847.50"></text></g><g><title>mem.Allocator.alloc__anon_6895 (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="821" width="0.0146%" height="15" fill="rgb(246,84,54)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="831.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="805" width="0.0146%" height="15" fill="rgb(242,110,6)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="815.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_7206 (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="789" width="0.0146%" height="15" fill="rgb(214,47,5)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="799.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="773" width="0.0146%" height="15" fill="rgb(218,159,25)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="783.50"></text></g><g><title>mem.Allocator.rawAlloc (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="757" width="0.0146%" height="15" fill="rgb(215,211,28)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="767.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="741" width="0.0146%" height="15" fill="rgb(238,59,32)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="751.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="725" width="0.0146%" height="15" fill="rgb(226,82,3)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="735.50"></text></g><g><title>hash_map.HashMapUnmanaged (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="709" width="0.0146%" height="15" fill="rgb(240,164,32)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="719.50"></text></g><g><title>hash_map.HashMapUnmanaged (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="693" width="0.0146%" height="15" fill="rgb(232,46,7)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="703.50"></text></g><g><title>hash_map.HashMapUnmanaged (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="677" width="0.0146%" height="15" fill="rgb(229,129,53)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="687.50"></text></g><g><title>hash_map.HashMapUnmanaged (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="661" width="0.0146%" height="15" fill="rgb(234,188,29)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="671.50"></text></g><g><title>hash_map.HashMapUnmanaged (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="645" width="0.0146%" height="15" fill="rgb(246,141,4)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="655.50"></text></g><g><title>hash_map.HashMapUnmanaged (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="629" width="0.0146%" height="15" fill="rgb(229,23,39)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="639.50"></text></g><g><title>mem.Allocator.alignedAlloc__anon_8944 (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="613" width="0.0146%" height="15" fill="rgb(206,12,3)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="623.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="597" width="0.0146%" height="15" fill="rgb(252,226,20)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="607.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_13385 (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="581" width="0.0146%" height="15" fill="rgb(216,123,35)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="591.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="565" width="0.0146%" height="15" fill="rgb(212,68,40)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="575.50"></text></g><g><title>mem.Allocator.rawAlloc (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="549" width="0.0146%" height="15" fill="rgb(254,125,32)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="559.50"></text></g><g><title>heap.PageAllocator.alloc (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="533" width="0.0146%" height="15" fill="rgb(253,97,22)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="543.50"></text></g><g><title>posix.mmap (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="517" width="0.0146%" height="15" fill="rgb(241,101,14)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="527.50"></text></g><g><title>heap.PageAllocator.alloc (3,776,555 samples, 0.01%)</title><rect x="99.1242%" y="501" width="0.0146%" height="15" fill="rgb(238,103,29)" fg:x="25694254015" fg:w="3776555"/><text x="99.3742%" y="511.50"></text></g><g><title>reader.ReaderT (7,013,287 samples, 0.03%)</title><rect x="99.1705%" y="885" width="0.0271%" height="15" fill="rgb(233,195,47)" fg:x="25706244013" fg:w="7013287"/><text x="99.4205%" y="895.50"></text></g><g><title>result.Result.next (4,007,085 samples, 0.02%)</title><rect x="99.1975%" y="885" width="0.0155%" height="15" fill="rgb(246,218,30)" fg:x="25713257300" fg:w="4007085"/><text x="99.4475%" y="895.50"></text></g><g><title>types.Types.Int64.decode (3,405,763 samples, 0.01%)</title><rect x="99.2130%" y="885" width="0.0131%" height="15" fill="rgb(219,145,47)" fg:x="25717264385" fg:w="3405763"/><text x="99.4630%" y="895.50"></text></g><g><title>types.Types.Int64.decodeKnown (3,503,765 samples, 0.01%)</title><rect x="99.2261%" y="885" width="0.0135%" height="15" fill="rgb(243,12,26)" fg:x="25720670148" fg:w="3503765"/><text x="99.4761%" y="895.50"></text></g><g><title>heap.memory_pool.MemoryPoolExtra (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="837" width="0.0134%" height="15" fill="rgb(214,87,16)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="847.50"></text></g><g><title>heap.memory_pool.MemoryPoolExtra (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="821" width="0.0134%" height="15" fill="rgb(208,99,42)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="831.50"></text></g><g><title>mem.Allocator.alignedAlloc__anon_8944 (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="805" width="0.0134%" height="15" fill="rgb(253,99,2)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="815.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="789" width="0.0134%" height="15" fill="rgb(220,168,23)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="799.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_13385 (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="773" width="0.0134%" height="15" fill="rgb(242,38,24)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="783.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="757" width="0.0134%" height="15" fill="rgb(225,182,9)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="767.50"></text></g><g><title>mem.Allocator.rawAlloc (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="741" width="0.0134%" height="15" fill="rgb(243,178,37)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="751.50"></text></g><g><title>heap.arena_allocator.ArenaAllocator.alloc (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="725" width="0.0134%" height="15" fill="rgb(232,139,19)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="735.50"></text></g><g><title>heap.arena_allocator.ArenaAllocator.createNode (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="709" width="0.0134%" height="15" fill="rgb(225,201,24)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="719.50"></text></g><g><title>mem.Allocator.rawAlloc (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="693" width="0.0134%" height="15" fill="rgb(221,47,46)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="703.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="677" width="0.0134%" height="15" fill="rgb(249,23,13)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="687.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="661" width="0.0134%" height="15" fill="rgb(219,9,5)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="671.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="645" width="0.0134%" height="15" fill="rgb(254,171,16)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="655.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="629" width="0.0134%" height="15" fill="rgb(230,171,20)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="639.50"></text></g><g><title>debug.captureStackTrace (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="613" width="0.0134%" height="15" fill="rgb(210,71,41)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="623.50"></text></g><g><title>os.linux.x86_64.syscall3 (3,479,881 samples, 0.01%)</title><rect x="99.2397%" y="597" width="0.0134%" height="15" fill="rgb(206,173,20)" fg:x="25724173913" fg:w="3479881"/><text x="99.4897%" y="607.50"></text></g><g><title>key_value.KeyValue.init.2 (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="805" width="0.0140%" height="15" fill="rgb(233,88,34)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="815.50"></text></g><g><title>mem.Allocator.alloc__anon_7066 (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="789" width="0.0140%" height="15" fill="rgb(223,209,46)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="799.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="773" width="0.0140%" height="15" fill="rgb(250,43,18)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="783.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_7205 (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="757" width="0.0140%" height="15" fill="rgb(208,13,10)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="767.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="741" width="0.0140%" height="15" fill="rgb(212,200,36)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="751.50"></text></g><g><title>mem.Allocator.rawAlloc (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="725" width="0.0140%" height="15" fill="rgb(225,90,30)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="735.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="709" width="0.0140%" height="15" fill="rgb(236,182,39)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="719.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="693" width="0.0140%" height="15" fill="rgb(212,144,35)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="703.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="677" width="0.0140%" height="15" fill="rgb(228,63,44)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="687.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="661" width="0.0140%" height="15" fill="rgb(228,109,6)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="671.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="645" width="0.0140%" height="15" fill="rgb(238,117,24)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="655.50"></text></g><g><title>debug.captureStackTrace (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="629" width="0.0140%" height="15" fill="rgb(242,26,26)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="639.50"></text></g><g><title>debug.StackIterator.next (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="613" width="0.0140%" height="15" fill="rgb(221,92,48)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="623.50"></text></g><g><title>debug.StackIterator.next_internal (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="597" width="0.0140%" height="15" fill="rgb(209,209,32)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="607.50"></text></g><g><title>debug.StackIterator.isValidMemory (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="581" width="0.0140%" height="15" fill="rgb(221,70,22)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="591.50"></text></g><g><title>posix.msync (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="565" width="0.0140%" height="15" fill="rgb(248,145,5)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="575.50"></text></g><g><title>os.linux.msync (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="549" width="0.0140%" height="15" fill="rgb(226,116,26)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="559.50"></text></g><g><title>os.linux.x86_64.syscall3 (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="533" width="0.0140%" height="15" fill="rgb(244,5,17)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="543.50"></text></g><g><title>[unknown] (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="517" width="0.0140%" height="15" fill="rgb(252,159,33)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="527.50"></text></g><g><title>[unknown] (3,619,391 samples, 0.01%)</title><rect x="99.2531%" y="501" width="0.0140%" height="15" fill="rgb(206,71,0)" fg:x="25727653794" fg:w="3619391"/><text x="99.5031%" y="511.50"></text></g><g><title>mem.Allocator.alloc__anon_4378 (3,897,255 samples, 0.02%)</title><rect x="99.2670%" y="805" width="0.0150%" height="15" fill="rgb(233,118,54)" fg:x="25731273185" fg:w="3897255"/><text x="99.5170%" y="815.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (3,897,255 samples, 0.02%)</title><rect x="99.2670%" y="789" width="0.0150%" height="15" fill="rgb(234,83,48)" fg:x="25731273185" fg:w="3897255"/><text x="99.5170%" y="799.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_7204 (3,897,255 samples, 0.02%)</title><rect x="99.2670%" y="773" width="0.0150%" height="15" fill="rgb(228,3,54)" fg:x="25731273185" fg:w="3897255"/><text x="99.5170%" y="783.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_12908 (3,897,255 samples, 0.02%)</title><rect x="99.2670%" y="757" width="0.0150%" height="15" fill="rgb(226,155,13)" fg:x="25731273185" fg:w="3897255"/><text x="99.5170%" y="767.50"></text></g><g><title>compiler_rt.memset.memset (3,897,255 samples, 0.02%)</title><rect x="99.2670%" y="741" width="0.0150%" height="15" fill="rgb(241,28,37)" fg:x="25731273185" fg:w="3897255"/><text x="99.5170%" y="751.50"></text></g><g><title>[unknown] (3,897,255 samples, 0.02%)</title><rect x="99.2670%" y="725" width="0.0150%" height="15" fill="rgb(233,93,10)" fg:x="25731273185" fg:w="3897255"/><text x="99.5170%" y="735.50"></text></g><g><title>[unknown] (17,024,771,189 samples, 65.68%)</title><rect x="33.6180%" y="901" width="65.6788%" height="15" fill="rgb(225,113,19)" fg:x="8714213897" fg:w="17024771189"/><text x="33.8680%" y="911.50">[unknown]</text></g><g><title>worker.NonBlocking (14,811,173 samples, 0.06%)</title><rect x="99.2397%" y="885" width="0.0571%" height="15" fill="rgb(241,2,18)" fg:x="25724173913" fg:w="14811173"/><text x="99.4897%" y="895.50"></text></g><g><title>worker.Manager.init (14,811,173 samples, 0.06%)</title><rect x="99.2397%" y="869" width="0.0571%" height="15" fill="rgb(228,207,21)" fg:x="25724173913" fg:w="14811173"/><text x="99.4897%" y="879.50"></text></g><g><title>worker.ConnPool.init (14,811,173 samples, 0.06%)</title><rect x="99.2397%" y="853" width="0.0571%" height="15" fill="rgb(213,211,35)" fg:x="25724173913" fg:w="14811173"/><text x="99.4897%" y="863.50"></text></g><g><title>worker.Conn.init (11,331,292 samples, 0.04%)</title><rect x="99.2531%" y="837" width="0.0437%" height="15" fill="rgb(209,83,10)" fg:x="25727653794" fg:w="11331292"/><text x="99.5031%" y="847.50"></text></g><g><title>request.State.init (11,331,292 samples, 0.04%)</title><rect x="99.2531%" y="821" width="0.0437%" height="15" fill="rgb(209,164,1)" fg:x="25727653794" fg:w="11331292"/><text x="99.5031%" y="831.50"></text></g><g><title>params.Params.init (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="805" width="0.0147%" height="15" fill="rgb(213,184,43)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="815.50"></text></g><g><title>mem.Allocator.alloc__anon_7066 (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="789" width="0.0147%" height="15" fill="rgb(231,61,34)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="799.50"></text></g><g><title>mem.Allocator.allocAdvancedWithRetAddr (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="773" width="0.0147%" height="15" fill="rgb(235,75,3)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="783.50"></text></g><g><title>mem.Allocator.allocWithSizeAndAlignment__anon_7205 (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="757" width="0.0147%" height="15" fill="rgb(220,106,47)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="767.50"></text></g><g><title>mem.Allocator.allocBytesWithAlignment__anon_7195 (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="741" width="0.0147%" height="15" fill="rgb(210,196,33)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="751.50"></text></g><g><title>mem.Allocator.rawAlloc (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="725" width="0.0147%" height="15" fill="rgb(229,154,42)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="735.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="709" width="0.0147%" height="15" fill="rgb(228,114,26)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="719.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="693" width="0.0147%" height="15" fill="rgb(208,144,1)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="703.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="677" width="0.0147%" height="15" fill="rgb(239,112,37)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="687.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="661" width="0.0147%" height="15" fill="rgb(210,96,50)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="671.50"></text></g><g><title>heap.general_purpose_allocator.GeneralPurposeAllocator (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="645" width="0.0147%" height="15" fill="rgb(222,178,2)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="655.50"></text></g><g><title>debug.captureStackTrace (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="629" width="0.0147%" height="15" fill="rgb(226,74,18)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="639.50"></text></g><g><title>debug.StackIterator.next (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="613" width="0.0147%" height="15" fill="rgb(225,67,54)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="623.50"></text></g><g><title>debug.StackIterator.next_internal (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="597" width="0.0147%" height="15" fill="rgb(251,92,32)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="607.50"></text></g><g><title>debug.StackIterator.isValidMemory (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="581" width="0.0147%" height="15" fill="rgb(228,149,22)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="591.50"></text></g><g><title>posix.msync (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="565" width="0.0147%" height="15" fill="rgb(243,54,13)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="575.50"></text></g><g><title>os.linux.msync (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="549" width="0.0147%" height="15" fill="rgb(243,180,28)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="559.50"></text></g><g><title>os.linux.x86_64.syscall3 (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="533" width="0.0147%" height="15" fill="rgb(208,167,24)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="543.50"></text></g><g><title>[unknown] (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="517" width="0.0147%" height="15" fill="rgb(245,73,45)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="527.50"></text></g><g><title>[unknown] (3,814,646 samples, 0.01%)</title><rect x="99.2821%" y="501" width="0.0147%" height="15" fill="rgb(237,203,48)" fg:x="25735170440" fg:w="3814646"/><text x="99.5321%" y="511.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (12,708,006 samples, 0.05%)</title><rect x="99.2968%" y="901" width="0.0490%" height="15" fill="rgb(211,197,16)" fg:x="25738985086" fg:w="12708006"/><text x="99.5468%" y="911.50"></text></g><g><title>compiler_rt.memcpy.memcpy (65,127,280 samples, 0.25%)</title><rect x="99.3458%" y="901" width="0.2513%" height="15" fill="rgb(243,99,51)" fg:x="25751693092" fg:w="65127280"/><text x="99.5958%" y="911.50"></text></g><g><title>hash_map.HashMapUnmanaged (4,190,889 samples, 0.02%)</title><rect x="99.6030%" y="901" width="0.0162%" height="15" fill="rgb(215,123,29)" fg:x="25818354633" fg:w="4190889"/><text x="99.8530%" y="911.50"></text></g><g><title>hash_map.HashMapUnmanaged (4,190,889 samples, 0.02%)</title><rect x="99.6030%" y="885" width="0.0162%" height="15" fill="rgb(239,186,37)" fg:x="25818354633" fg:w="4190889"/><text x="99.8530%" y="895.50"></text></g><g><title>Loopje (25,826,727,334 samples, 99.64%)</title><rect x="0.0000%" y="917" width="99.6353%" height="15" fill="rgb(252,136,39)" fg:x="0" fg:w="25826727334"/><text x="0.2500%" y="927.50">Loopje</text></g><g><title>navigation.navigateBetween (4,181,812 samples, 0.02%)</title><rect x="99.6192%" y="901" width="0.0161%" height="15" fill="rgb(223,213,32)" fg:x="25822545522" fg:w="4181812"/><text x="99.8692%" y="911.50"></text></g><g><title>array_hash_map.ArrayHashMapUnmanaged (4,181,812 samples, 0.02%)</title><rect x="99.6192%" y="885" width="0.0161%" height="15" fill="rgb(233,115,5)" fg:x="25822545522" fg:w="4181812"/><text x="99.8692%" y="895.50"></text></g><g><title>__vdso_clock_gettime (3,999,346 samples, 0.02%)</title><rect x="99.6353%" y="885" width="0.0154%" height="15" fill="rgb(207,226,44)" fg:x="25826727334" fg:w="3999346"/><text x="99.8853%" y="895.50"></text></g><g><title>[anon] (4,036,767 samples, 0.02%)</title><rect x="99.6353%" y="901" width="0.0156%" height="15" fill="rgb(208,126,0)" fg:x="25826727334" fg:w="4036767"/><text x="99.8853%" y="911.50"></text></g><g><title>Thread.Futex.Deadline.wait (3,688,043 samples, 0.01%)</title><rect x="99.6636%" y="773" width="0.0142%" height="15" fill="rgb(244,66,21)" fg:x="25834051835" fg:w="3688043"/><text x="99.9136%" y="783.50"></text></g><g><title>Progress.wait (17,828,682 samples, 0.07%)</title><rect x="99.6636%" y="821" width="0.0688%" height="15" fill="rgb(222,97,12)" fg:x="25834051835" fg:w="17828682"/><text x="99.9136%" y="831.50"></text></g><g><title>Thread.ResetEvent.timedWait (17,828,682 samples, 0.07%)</title><rect x="99.6636%" y="805" width="0.0688%" height="15" fill="rgb(219,213,19)" fg:x="25834051835" fg:w="17828682"/><text x="99.9136%" y="815.50"></text></g><g><title>Thread.ResetEvent.FutexImpl.wait (17,828,682 samples, 0.07%)</title><rect x="99.6636%" y="789" width="0.0688%" height="15" fill="rgb(252,169,30)" fg:x="25834051835" fg:w="17828682"/><text x="99.9136%" y="799.50"></text></g><g><title>Thread.ResetEvent.FutexImpl.waitUntilSet (14,140,639 samples, 0.05%)</title><rect x="99.6778%" y="773" width="0.0546%" height="15" fill="rgb(206,32,51)" fg:x="25837739878" fg:w="14140639"/><text x="99.9278%" y="783.50"></text></g><g><title>Thread.Futex.Deadline.wait (12,923,991 samples, 0.05%)</title><rect x="99.6825%" y="757" width="0.0499%" height="15" fill="rgb(250,172,42)" fg:x="25838956526" fg:w="12923991"/><text x="99.9325%" y="767.50"></text></g><g><title>Thread.Futex.timedWait (12,923,991 samples, 0.05%)</title><rect x="99.6825%" y="741" width="0.0499%" height="15" fill="rgb(209,34,43)" fg:x="25838956526" fg:w="12923991"/><text x="99.9325%" y="751.50"></text></g><g><title>Thread.Futex.LinuxImpl.wait (12,923,991 samples, 0.05%)</title><rect x="99.6825%" y="725" width="0.0499%" height="15" fill="rgb(223,11,35)" fg:x="25838956526" fg:w="12923991"/><text x="99.9325%" y="735.50"></text></g><g><title>os.linux.futex_wait (12,923,991 samples, 0.05%)</title><rect x="99.6825%" y="709" width="0.0499%" height="15" fill="rgb(251,219,26)" fg:x="25838956526" fg:w="12923991"/><text x="99.9325%" y="719.50"></text></g><g><title>os.linux.x86_64.syscall4 (12,923,991 samples, 0.05%)</title><rect x="99.6825%" y="693" width="0.0499%" height="15" fill="rgb(231,119,3)" fg:x="25838956526" fg:w="12923991"/><text x="99.9325%" y="703.50"></text></g><g><title>[unknown] (11,601,926 samples, 0.04%)</title><rect x="99.6876%" y="677" width="0.0448%" height="15" fill="rgb(216,97,11)" fg:x="25840278591" fg:w="11601926"/><text x="99.9376%" y="687.50"></text></g><g><title>[unknown] (11,601,926 samples, 0.04%)</title><rect x="99.6876%" y="661" width="0.0448%" height="15" fill="rgb(223,59,9)" fg:x="25840278591" fg:w="11601926"/><text x="99.9376%" y="671.50"></text></g><g><title>[unknown] (9,043,454 samples, 0.03%)</title><rect x="99.6974%" y="645" width="0.0349%" height="15" fill="rgb(233,93,31)" fg:x="25842837063" fg:w="9043454"/><text x="99.9474%" y="655.50"></text></g><g><title>[unknown] (9,043,454 samples, 0.03%)</title><rect x="99.6974%" y="629" width="0.0349%" height="15" fill="rgb(239,81,33)" fg:x="25842837063" fg:w="9043454"/><text x="99.9474%" y="639.50"></text></g><g><title>[unknown] (9,043,454 samples, 0.03%)</title><rect x="99.6974%" y="613" width="0.0349%" height="15" fill="rgb(213,120,34)" fg:x="25842837063" fg:w="9043454"/><text x="99.9474%" y="623.50"></text></g><g><title>[unknown] (9,043,454 samples, 0.03%)</title><rect x="99.6974%" y="597" width="0.0349%" height="15" fill="rgb(243,49,53)" fg:x="25842837063" fg:w="9043454"/><text x="99.9474%" y="607.50"></text></g><g><title>[unknown] (7,450,908 samples, 0.03%)</title><rect x="99.7036%" y="581" width="0.0287%" height="15" fill="rgb(247,216,33)" fg:x="25844429609" fg:w="7450908"/><text x="99.9536%" y="591.50"></text></g><g><title>[unknown] (7,441,678 samples, 0.03%)</title><rect x="99.7036%" y="565" width="0.0287%" height="15" fill="rgb(226,26,14)" fg:x="25844438839" fg:w="7441678"/><text x="99.9536%" y="575.50"></text></g><g><title>[unknown] (4,936,948 samples, 0.02%)</title><rect x="99.7133%" y="549" width="0.0190%" height="15" fill="rgb(215,49,53)" fg:x="25846943569" fg:w="4936948"/><text x="99.9633%" y="559.50"></text></g><g><title>[unknown] (4,936,948 samples, 0.02%)</title><rect x="99.7133%" y="533" width="0.0190%" height="15" fill="rgb(245,162,40)" fg:x="25846943569" fg:w="4936948"/><text x="99.9633%" y="543.50"></text></g><g><title>[unknown] (4,179,779 samples, 0.02%)</title><rect x="99.7162%" y="517" width="0.0161%" height="15" fill="rgb(229,68,17)" fg:x="25847700738" fg:w="4179779"/><text x="99.9662%" y="527.50"></text></g><g><title>[unknown] (4,179,779 samples, 0.02%)</title><rect x="99.7162%" y="501" width="0.0161%" height="15" fill="rgb(213,182,10)" fg:x="25847700738" fg:w="4179779"/><text x="99.9662%" y="511.50"></text></g><g><title>c.clone (20,019,705 samples, 0.08%)</title><rect x="99.6580%" y="885" width="0.0772%" height="15" fill="rgb(245,125,30)" fg:x="25832617981" fg:w="20019705"/><text x="99.9080%" y="895.50"></text></g><g><title>Thread.LinuxThreadImpl.spawn__anon_14229.Instance.entryFn (19,777,451 samples, 0.08%)</title><rect x="99.6590%" y="869" width="0.0763%" height="15" fill="rgb(232,202,2)" fg:x="25832860235" fg:w="19777451"/><text x="99.9090%" y="879.50"></text></g><g><title>Thread.callFn__anon_15100 (19,777,451 samples, 0.08%)</title><rect x="99.6590%" y="853" width="0.0763%" height="15" fill="rgb(237,140,51)" fg:x="25832860235" fg:w="19777451"/><text x="99.9090%" y="863.50"></text></g><g><title>Progress.updateThreadRun (19,777,451 samples, 0.08%)</title><rect x="99.6590%" y="837" width="0.0763%" height="15" fill="rgb(236,157,25)" fg:x="25832860235" fg:w="19777451"/><text x="99.9090%" y="847.50"></text></g><g><title>build (29,288,113 samples, 0.11%)</title><rect x="99.6353%" y="917" width="0.1130%" height="15" fill="rgb(219,209,0)" fg:x="25826727334" fg:w="29288113"/><text x="99.8853%" y="927.50"></text></g><g><title>[unknown] (25,251,346 samples, 0.10%)</title><rect x="99.6509%" y="901" width="0.0974%" height="15" fill="rgb(240,116,54)" fg:x="25830764101" fg:w="25251346"/><text x="99.9009%" y="911.50"></text></g><g><title>zig.system.glibcVerFromSoFile (3,377,761 samples, 0.01%)</title><rect x="99.7353%" y="885" width="0.0130%" height="15" fill="rgb(216,10,36)" fg:x="25852637686" fg:w="3377761"/><text x="99.9853%" y="895.50"></text></g><g><title>mem.startsWith__anon_8169 (3,377,761 samples, 0.01%)</title><rect x="99.7353%" y="869" width="0.0130%" height="15" fill="rgb(222,72,44)" fg:x="25852637686" fg:w="3377761"/><text x="99.9853%" y="879.50"></text></g><g><title>mem.eql__anon_8373 (3,377,761 samples, 0.01%)</title><rect x="99.7353%" y="853" width="0.0130%" height="15" fill="rgb(232,159,9)" fg:x="25852637686" fg:w="3377761"/><text x="99.9853%" y="863.50"></text></g><g><title>mem.eqlBytes (3,377,761 samples, 0.01%)</title><rect x="99.7353%" y="837" width="0.0130%" height="15" fill="rgb(210,39,32)" fg:x="25852637686" fg:w="3377761"/><text x="99.9853%" y="847.50"></text></g><g><title>[unknown] (12,773,578 samples, 0.05%)</title><rect x="99.7577%" y="885" width="0.0493%" height="15" fill="rgb(216,194,45)" fg:x="25858458962" fg:w="12773578"/><text x="100.0077%" y="895.50"></text></g><g><title>[unknown] (12,773,578 samples, 0.05%)</title><rect x="99.7577%" y="869" width="0.0493%" height="15" fill="rgb(218,18,35)" fg:x="25858458962" fg:w="12773578"/><text x="100.0077%" y="879.50"></text></g><g><title>[unknown] (12,773,578 samples, 0.05%)</title><rect x="99.7577%" y="853" width="0.0493%" height="15" fill="rgb(207,83,51)" fg:x="25858458962" fg:w="12773578"/><text x="100.0077%" y="863.50"></text></g><g><title>[unknown] (11,087,217 samples, 0.04%)</title><rect x="99.7642%" y="837" width="0.0428%" height="15" fill="rgb(225,63,43)" fg:x="25860145323" fg:w="11087217"/><text x="100.0142%" y="847.50"></text></g><g><title>[unknown] (11,087,217 samples, 0.04%)</title><rect x="99.7642%" y="821" width="0.0428%" height="15" fill="rgb(207,57,36)" fg:x="25860145323" fg:w="11087217"/><text x="100.0142%" y="831.50"></text></g><g><title>[unknown] (11,087,217 samples, 0.04%)</title><rect x="99.7642%" y="805" width="0.0428%" height="15" fill="rgb(216,99,33)" fg:x="25860145323" fg:w="11087217"/><text x="100.0142%" y="815.50"></text></g><g><title>[unknown] (11,087,217 samples, 0.04%)</title><rect x="99.7642%" y="789" width="0.0428%" height="15" fill="rgb(225,42,16)" fg:x="25860145323" fg:w="11087217"/><text x="100.0142%" y="799.50"></text></g><g><title>[unknown] (11,087,217 samples, 0.04%)</title><rect x="99.7642%" y="773" width="0.0428%" height="15" fill="rgb(220,201,45)" fg:x="25860145323" fg:w="11087217"/><text x="100.0142%" y="783.50"></text></g><g><title>[unknown] (10,524,709 samples, 0.04%)</title><rect x="99.7664%" y="757" width="0.0406%" height="15" fill="rgb(225,33,4)" fg:x="25860707831" fg:w="10524709"/><text x="100.0164%" y="767.50"></text></g><g><title>[unknown] (10,524,709 samples, 0.04%)</title><rect x="99.7664%" y="741" width="0.0406%" height="15" fill="rgb(224,33,50)" fg:x="25860707831" fg:w="10524709"/><text x="100.0164%" y="751.50"></text></g><g><title>[unknown] (10,524,709 samples, 0.04%)</title><rect x="99.7664%" y="725" width="0.0406%" height="15" fill="rgb(246,198,51)" fg:x="25860707831" fg:w="10524709"/><text x="100.0164%" y="735.50"></text></g><g><title>[unknown] (10,524,265 samples, 0.04%)</title><rect x="99.7664%" y="709" width="0.0406%" height="15" fill="rgb(205,22,4)" fg:x="25860708275" fg:w="10524265"/><text x="100.0164%" y="719.50"></text></g><g><title>[unknown] (10,511,424 samples, 0.04%)</title><rect x="99.7664%" y="693" width="0.0406%" height="15" fill="rgb(206,3,8)" fg:x="25860721116" fg:w="10511424"/><text x="100.0164%" y="703.50"></text></g><g><title>[unknown] (10,511,424 samples, 0.04%)</title><rect x="99.7664%" y="677" width="0.0406%" height="15" fill="rgb(251,23,15)" fg:x="25860721116" fg:w="10511424"/><text x="100.0164%" y="687.50"></text></g><g><title>[unknown] (10,511,424 samples, 0.04%)</title><rect x="99.7664%" y="661" width="0.0406%" height="15" fill="rgb(252,88,28)" fg:x="25860721116" fg:w="10511424"/><text x="100.0164%" y="671.50"></text></g><g><title>[unknown] (10,846,453 samples, 0.04%)</title><rect x="99.8218%" y="821" width="0.0418%" height="15" fill="rgb(212,127,14)" fg:x="25875080518" fg:w="10846453"/><text x="100.0718%" y="831.50"></text></g><g><title>[unknown] (9,939,701 samples, 0.04%)</title><rect x="99.8253%" y="805" width="0.0383%" height="15" fill="rgb(247,145,37)" fg:x="25875987270" fg:w="9939701"/><text x="100.0753%" y="815.50"></text></g><g><title>[unknown] (9,939,701 samples, 0.04%)</title><rect x="99.8253%" y="789" width="0.0383%" height="15" fill="rgb(209,117,53)" fg:x="25875987270" fg:w="9939701"/><text x="100.0753%" y="799.50"></text></g><g><title>[unknown] (8,969,795 samples, 0.03%)</title><rect x="99.8291%" y="773" width="0.0346%" height="15" fill="rgb(212,90,42)" fg:x="25876957176" fg:w="8969795"/><text x="100.0791%" y="783.50"></text></g><g><title>[unknown] (7,818,406 samples, 0.03%)</title><rect x="99.8335%" y="757" width="0.0302%" height="15" fill="rgb(218,164,37)" fg:x="25878108565" fg:w="7818406"/><text x="100.0835%" y="767.50"></text></g><g><title>[unknown] (6,911,654 samples, 0.03%)</title><rect x="99.8370%" y="741" width="0.0267%" height="15" fill="rgb(246,65,34)" fg:x="25879015317" fg:w="6911654"/><text x="100.0870%" y="751.50"></text></g><g><title>[unknown] (6,911,654 samples, 0.03%)</title><rect x="99.8370%" y="725" width="0.0267%" height="15" fill="rgb(231,100,33)" fg:x="25879015317" fg:w="6911654"/><text x="100.0870%" y="735.50"></text></g><g><title>[unknown] (6,902,521 samples, 0.03%)</title><rect x="99.8370%" y="709" width="0.0266%" height="15" fill="rgb(228,126,14)" fg:x="25879024450" fg:w="6902521"/><text x="100.0870%" y="719.50"></text></g><g><title>[unknown] (6,902,521 samples, 0.03%)</title><rect x="99.8370%" y="693" width="0.0266%" height="15" fill="rgb(215,173,21)" fg:x="25879024450" fg:w="6902521"/><text x="100.0870%" y="703.50"></text></g><g><title>[unknown] (5,975,132 samples, 0.02%)</title><rect x="99.8406%" y="677" width="0.0231%" height="15" fill="rgb(210,6,40)" fg:x="25879951839" fg:w="5975132"/><text x="100.0906%" y="687.50"></text></g><g><title>[unknown] (5,975,132 samples, 0.02%)</title><rect x="99.8406%" y="661" width="0.0231%" height="15" fill="rgb(212,48,18)" fg:x="25879951839" fg:w="5975132"/><text x="100.0906%" y="671.50"></text></g><g><title>[unknown] (5,038,479 samples, 0.02%)</title><rect x="99.8442%" y="645" width="0.0194%" height="15" fill="rgb(230,214,11)" fg:x="25880888492" fg:w="5038479"/><text x="100.0942%" y="655.50"></text></g><g><title>[unknown] (3,012,418 samples, 0.01%)</title><rect x="99.8521%" y="629" width="0.0116%" height="15" fill="rgb(254,105,39)" fg:x="25882914553" fg:w="3012418"/><text x="100.1021%" y="639.50"></text></g><g><title>[unknown] (38,065,728 samples, 0.15%)</title><rect x="99.7483%" y="901" width="0.1469%" height="15" fill="rgb(245,158,5)" fg:x="25856029737" fg:w="38065728"/><text x="99.9983%" y="911.50"></text></g><g><title>[zig] (22,862,925 samples, 0.09%)</title><rect x="99.8070%" y="885" width="0.0882%" height="15" fill="rgb(249,208,11)" fg:x="25871232540" fg:w="22862925"/><text x="100.0570%" y="895.50"></text></g><g><title>[zig] (22,110,383 samples, 0.09%)</title><rect x="99.8099%" y="869" width="0.0853%" height="15" fill="rgb(210,39,28)" fg:x="25871985082" fg:w="22110383"/><text x="100.0599%" y="879.50"></text></g><g><title>[zig] (19,014,947 samples, 0.07%)</title><rect x="99.8218%" y="853" width="0.0734%" height="15" fill="rgb(211,56,53)" fg:x="25875080518" fg:w="19014947"/><text x="100.0718%" y="863.50"></text></g><g><title>[zig] (19,014,947 samples, 0.07%)</title><rect x="99.8218%" y="837" width="0.0734%" height="15" fill="rgb(226,201,30)" fg:x="25875080518" fg:w="19014947"/><text x="100.0718%" y="847.50"></text></g><g><title>[zig] (8,168,494 samples, 0.03%)</title><rect x="99.8637%" y="821" width="0.0315%" height="15" fill="rgb(239,101,34)" fg:x="25885926971" fg:w="8168494"/><text x="100.1137%" y="831.50"></text></g><g><title>[unknown] (13,486,702 samples, 0.05%)</title><rect x="99.8952%" y="885" width="0.0520%" height="15" fill="rgb(226,209,5)" fg:x="25894108255" fg:w="13486702"/><text x="100.1452%" y="895.50"></text></g><g><title>[unknown] (13,486,702 samples, 0.05%)</title><rect x="99.8952%" y="869" width="0.0520%" height="15" fill="rgb(250,105,47)" fg:x="25894108255" fg:w="13486702"/><text x="100.1452%" y="879.50"></text></g><g><title>[unknown] (13,486,702 samples, 0.05%)</title><rect x="99.8952%" y="853" width="0.0520%" height="15" fill="rgb(230,72,3)" fg:x="25894108255" fg:w="13486702"/><text x="100.1452%" y="863.50"></text></g><g><title>[unknown] (13,486,702 samples, 0.05%)</title><rect x="99.8952%" y="837" width="0.0520%" height="15" fill="rgb(232,218,39)" fg:x="25894108255" fg:w="13486702"/><text x="100.1452%" y="847.50"></text></g><g><title>[unknown] (10,241,788 samples, 0.04%)</title><rect x="99.9078%" y="821" width="0.0395%" height="15" fill="rgb(248,166,6)" fg:x="25897353169" fg:w="10241788"/><text x="100.1578%" y="831.50"></text></g><g><title>[unknown] (7,582,636 samples, 0.03%)</title><rect x="99.9180%" y="805" width="0.0293%" height="15" fill="rgb(247,89,20)" fg:x="25900012321" fg:w="7582636"/><text x="100.1680%" y="815.50"></text></g><g><title>[unknown] (5,682,705 samples, 0.02%)</title><rect x="99.9253%" y="789" width="0.0219%" height="15" fill="rgb(248,130,54)" fg:x="25901912252" fg:w="5682705"/><text x="100.1753%" y="799.50"></text></g><g><title>[unknown] (5,682,423 samples, 0.02%)</title><rect x="99.9253%" y="773" width="0.0219%" height="15" fill="rgb(234,196,4)" fg:x="25901912534" fg:w="5682423"/><text x="100.1753%" y="783.50"></text></g><g><title>[unknown] (3,004,618 samples, 0.01%)</title><rect x="99.9357%" y="757" width="0.0116%" height="15" fill="rgb(250,143,31)" fg:x="25904590339" fg:w="3004618"/><text x="100.1857%" y="767.50"></text></g><g><title>[unknown] (3,000,116 samples, 0.01%)</title><rect x="99.9357%" y="741" width="0.0116%" height="15" fill="rgb(211,110,34)" fg:x="25904594841" fg:w="3000116"/><text x="100.1857%" y="751.50"></text></g><g><title>[unknown] (2,999,143 samples, 0.01%)</title><rect x="99.9357%" y="725" width="0.0116%" height="15" fill="rgb(215,124,48)" fg:x="25904595814" fg:w="2999143"/><text x="100.1857%" y="735.50"></text></g><g><title>[unknown] (2,999,143 samples, 0.01%)</title><rect x="99.9357%" y="709" width="0.0116%" height="15" fill="rgb(216,46,13)" fg:x="25904595814" fg:w="2999143"/><text x="100.1857%" y="719.50"></text></g><g><title>[unknown] (2,827,636 samples, 0.01%)</title><rect x="99.9364%" y="693" width="0.0109%" height="15" fill="rgb(205,184,25)" fg:x="25904767321" fg:w="2827636"/><text x="100.1864%" y="703.50"></text></g><g><title>[unknown] (9,465,177 samples, 0.04%)</title><rect x="99.9579%" y="869" width="0.0365%" height="15" fill="rgb(228,1,10)" fg:x="25910360693" fg:w="9465177"/><text x="100.2079%" y="879.50"></text></g><g><title>[unknown] (9,465,177 samples, 0.04%)</title><rect x="99.9579%" y="853" width="0.0365%" height="15" fill="rgb(213,116,27)" fg:x="25910360693" fg:w="9465177"/><text x="100.2079%" y="863.50"></text></g><g><title>[unknown] (9,465,177 samples, 0.04%)</title><rect x="99.9579%" y="837" width="0.0365%" height="15" fill="rgb(241,95,50)" fg:x="25910360693" fg:w="9465177"/><text x="100.2079%" y="847.50"></text></g><g><title>[unknown] (9,465,177 samples, 0.04%)</title><rect x="99.9579%" y="821" width="0.0365%" height="15" fill="rgb(238,48,32)" fg:x="25910360693" fg:w="9465177"/><text x="100.2079%" y="831.50"></text></g><g><title>[unknown] (9,465,177 samples, 0.04%)</title><rect x="99.9579%" y="805" width="0.0365%" height="15" fill="rgb(235,113,49)" fg:x="25910360693" fg:w="9465177"/><text x="100.2079%" y="815.50"></text></g><g><title>[unknown] (9,465,177 samples, 0.04%)</title><rect x="99.9579%" y="789" width="0.0365%" height="15" fill="rgb(205,127,43)" fg:x="25910360693" fg:w="9465177"/><text x="100.2079%" y="799.50"></text></g><g><title>[unknown] (9,465,177 samples, 0.04%)</title><rect x="99.9579%" y="773" width="0.0365%" height="15" fill="rgb(250,162,2)" fg:x="25910360693" fg:w="9465177"/><text x="100.2079%" y="783.50"></text></g><g><title>[unknown] (9,465,177 samples, 0.04%)</title><rect x="99.9579%" y="757" width="0.0365%" height="15" fill="rgb(220,13,41)" fg:x="25910360693" fg:w="9465177"/><text x="100.2079%" y="767.50"></text></g><g><title>[unknown] (9,465,177 samples, 0.04%)</title><rect x="99.9579%" y="741" width="0.0365%" height="15" fill="rgb(249,221,25)" fg:x="25910360693" fg:w="9465177"/><text x="100.2079%" y="751.50"></text></g><g><title>all (25,921,263,211 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(215,208,19)" fg:x="0" fg:w="25921263211"/><text x="0.2500%" y="943.50"></text></g><g><title>zig (65,246,350 samples, 0.25%)</title><rect x="99.7483%" y="917" width="0.2517%" height="15" fill="rgb(236,175,2)" fg:x="25856016861" fg:w="65246350"/><text x="99.9983%" y="927.50"></text></g><g><title>[zig] (27,167,746 samples, 0.10%)</title><rect x="99.8952%" y="901" width="0.1048%" height="15" fill="rgb(241,52,2)" fg:x="25894095465" fg:w="27167746"/><text x="100.1452%" y="911.50"></text></g><g><title>[zig] (13,668,254 samples, 0.05%)</title><rect x="99.9473%" y="885" width="0.0527%" height="15" fill="rgb(248,140,14)" fg:x="25907594957" fg:w="13668254"/><text x="100.1973%" y="895.50"></text></g></svg></svg>